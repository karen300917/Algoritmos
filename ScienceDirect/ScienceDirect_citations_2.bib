@article{LAI2021104287,
title = {Investigating the impact of a flipped programming course using the DT-CDIO approach},
journal = {Computers & Education},
volume = {173},
pages = {104287},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104287},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521001640},
author = {Chin-Feng Lai and Hua-Xu Zhong and Po-Sheng Chiu},
keywords = {Flipped classroom, Design thinking, Teaching/learning strategies, 21st-century abilities, Computational thinking},
abstract = {Currently, flipped learning requires a framework that will give novices and students the ability to face the complex problems encountered in programming courses. It is necessary to design a design thinking learning framework that addresses independent learning and specific processes that will improve students' 21st-century skills. The existing literature has not implemented flipped programming courses from a design thinking perspective (Cook & Bush, 2018), which would thus be an innovative approach to designing teaching methods and investigating the effects of this framework. The purpose of this study was to develop analyze, observe, reflect, conceive, design, implement, and operate (Crawley et al., 2007) a DT-CDIO model and to investigate the relationship of the flow experience to computational thinking and cognitive load in order to understand the impact of the flow experience on a flipped programming course. The participants in this study comprised 40 pre-service education students (Male = 17; Female = 23). The partial least squares (PLS) method was used for the data analysis to test the model. This study was intended to obtain and evaluate significant differences between the students' flow experience and their computational thinking ability and cognitive load. The results indicated that the DT-CDIO pedagogy filled a long-standing gap related to a lack of reflective pedagogy and design thinking problems. The flow experience negatively impacted creativity and problem solving ability. Meanwhile, intrinsic cognitive load negatively impacted the flow experience. Germane cognitive load positively impacted the flow experience. In particular, the flow experience is a crucial factor that can be used to predict various computational thinking skills in a programming curriculum. More importantly, this study provides important insights into the implications of the DT-CDIO approach and other related factors.}
}
@article{PEREZMARIN2020105849,
title = {Can computational thinking be improved by using a methodology based on metaphors and scratch to teach computer programming to children?},
journal = {Computers in Human Behavior},
volume = {105},
pages = {105849},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2018.12.027},
url = {https://www.sciencedirect.com/science/article/pii/S0747563218306137},
author = {Diana Pérez-Marín and Raquel Hijón-Neira and Adrián Bacelo and Celeste Pizarro},
keywords = {Computational thinking, Primary education, Programming, Methodology, Metaphor},
abstract = {Computational thinking (CT) is a key skill in the 21st century. However, it is not clear which is the most effective way to acquire and improve CT. Big research efforts are made to determine which pedagogical means should be used. One research trend is based on the idea that teaching programming since Primary Education suffices to improve CT. In our previous work, we proposed and validated a methodology based on metaphors and used of Scratch (MECOPROG) to teach basic programming concepts to children. It is our hypothesis H that by applying MECOPROG, students will develop their CT. To check H, we carried out an experiment with 132 Primary Education Students (9–12 years in age). At the beginning of the experiment, all students were asked to fill in a programming concepts test and two tests to measure their CT. During the sessions, all students were taught according to MECOPROG. Finally, they took the three tests again. A significant increase in the results on all the tests has been measured, supporting the use of metaphors and Scratch to teach computer programming concepts to Primary Education students to develop their CT.}
}
@article{BACELO2023101284,
title = {Characterising algorithmic thinking: A university study of unplugged activities✰},
journal = {Thinking Skills and Creativity},
volume = {48},
pages = {101284},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101284},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123000548},
author = {Adrián Bacelo and Inés M. Gómez-Chacón},
keywords = {Algorithmic thinking, Theory of mathematical working space, Computational thinking, University teaching, Statistical Implicative Analysis (SIA)},
abstract = {Algorithmic thinking is a type of thinking that occurs in the context of computational thinking. Given its importance in the current educational context, it seems pertinent to deepen into its conceptual and operational understanding for teaching. The exploration of research shows us that there are almost no studies at university level where algorithmic thinking is connected to mathematical thinking, and more importantly, to characterise it and be able to analyse and evaluate it better. The aim of this research is to characterise algorithmic thinking in a university context of the Bachelor's Degree in Mathematics by unplugged tasks, offering a model of analysis through categories that establish connections between mathematical and algorithmic working spaces in three dimensions, semiotic, instrumental and discursive. The results confirm the interaction between these dimensions and their predictive value for better programming performance. The study also adds novel considerations related to the role and interaction of mathematical and computational thinking categories involved in algorithmic thinking.}
}
@article{KONG2022104562,
title = {Validating a computational thinking concepts test for primary education using item response theory: An analysis of students’ responses},
journal = {Computers & Education},
volume = {187},
pages = {104562},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104562},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522001336},
author = {Siu-Cheung Kong and Ming Lai},
keywords = {Computational thinking concepts, Item response theory, Primary education, Test, Validation},
abstract = {Although instruments for assessing students' computational thinking (CT) concepts in primary education have been developed, they have rarely been validated in terms of item response theory (IRT). We consider IRT to be a rigorous validation tool and apply it to a CT concepts test for primary education involving 13,670 students. A two-parameter logistic model was chosen over other IRT models, as it indicated an acceptable model fit and item fit. The discrimination parameters indicated that the instrument could effectively distinguish between students with various ability levels. Nominal response modelling in IRT was used to retrieve information from the students' responses, and those with a lower ability level were found to only consider one of the conditions provided, had no understanding of the repetition structure, and might have difficulties in associating a sprite with its corresponding codes. Based on ability estimates, we also found that the students’ ability in terms of CT concepts increased with grades and that boys generally performed slightly better than girls. These results suggest that the instrument can be used to examine the learning achievements of students in terms of CT concepts.}
}
@article{SHAHIN2022111107,
title = {How secondary school girls perceive Computational Thinking practices through collaborative programming with the micro:bit},
journal = {Journal of Systems and Software},
volume = {183},
pages = {111107},
year = {2022},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2021.111107},
url = {https://www.sciencedirect.com/science/article/pii/S0164121221002041},
author = {Mojtaba Shahin and Christabel Gonsalvez and Jon Whittle and Chunyang Chen and Li Li and Xin Xia},
keywords = {Computational thinking practices, Girls, Education, K-12, Programming},
abstract = {Computational Thinking (CT) has been investigated from different perspectives. This research aims to investigate how secondary school girls perceive CT practices – the problem-solving practices that students apply while they are engaged in programming – when using the micro:bit device in a collaborative setting. This study also explores the collaborative programming process of secondary school girls with the micro:bit device. We conducted mixed-methods research with 203 secondary school girls (in the state of Victoria, Australia) and 31 mentors attending a girls-only CT program (OzGirlsCT program). The girls were grouped into 52 teams and collaboratively developed computational solutions around realistic, important problems to them and their communities. We distributed two surveys (with 193 responses each) to the girls. Further, we surveyed the mentors (with 31 responses) who monitored the girls, and collected their observation reports on their teams Our study indicates that the girls found “debugging” the most difficult type of CT practice to apply, while collaborative practices of CT were the easiest. We found that prior coding experience significantly reduced the difficulty level of only one CT practice - “debugging”. Our study also identified six challenges the girls faced and six best practices they adopted when working on their computational solutions.}
}
@article{DEPAULA201839,
title = {Playing Beowulf: Bridging computational thinking, arts and literature through game-making},
journal = {International Journal of Child-Computer Interaction},
volume = {16},
pages = {39-46},
year = {2018},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2017.11.003},
url = {https://www.sciencedirect.com/science/article/pii/S2212868917300247},
author = {Bruno Henrique {de Paula} and Andrew Burn and Richard Noss and José Armando Valente},
keywords = {Game-making, Computational thinking, Arts, Humanities},
abstract = {Preparing younger generations to engage meaningfully with digital technology is often seen as one of the goals of 21st century education. JeanetteWing’s seminal work on Computational Thinking (CT) is an important landmark for this goal: CT represents a way of thinking, a set of problem-solving skills which can be valuable when interacting with digital technologies, and with different fields of knowledge, such as Arts and Humanities. Even if this cross-areas relevance has been celebrated and acknowledged in theoretical research, there has been a lack of practical projects exploring these links between CT and non-STEM fields. This research develops these links. We present a specific case – a game produced by two 14 years-old boys – within Playing Beowulf, a collaboration with the British library’s Young Researchers programme, in which students aged 13–14 from an inner-London (UK) school have developed games based on their own readings of the Anglo-Saxon poem Beowulf during an after-school club. The game was produced using MissionMaker, a software (currently under development at UCL Knowledge Lab) that allows users to create and code their own first-person 3D games in a simple way, using pre-made 3D assets, such as rooms, props, characters and weapons and a simplified programming language manipulated through drop-down lists. We argue that MissionMaker, by simplifying the development process (low floor), can be a means to foster the building of knowledge in both STEM (CT) and Arts and Humanities, building bridges between these two areas inside and outside traditional schooling.}
}
@incollection{KIRK2017369,
title = {Chapter 17 - Parallel programming and computational thinking},
editor = {David B. Kirk and Wen-mei W. Hwu},
booktitle = {Programming Massively Parallel Processors (Third Edition)},
publisher = {Morgan Kaufmann},
edition = {Third Edition},
pages = {369-386},
year = {2017},
isbn = {978-0-12-811986-0},
doi = {https://doi.org/10.1016/B978-0-12-811986-0.00017-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128119860000170},
author = {David B. Kirk and Wen-mei W. Hwu},
keywords = {Strong scaling, weak scaling, problem formulation, model, hardware limitations, program transformation, gather, scatter, data sharing, locality, binning, tiling, approximation},
abstract = {This chapter introduces the concept of computational thinking. It builds on the previous chapters to illustrate the central theme in computational thinking. It first reviews the main goals of parallel programming. It then discusses the thinking process of problem decomposition and algorithm selection. It then goes into the main concepts covered in the previous chapters and shows how they can be generalized into broader computational problem solving techniques.}
}
@article{KORKMAZ2017558,
title = {A validity and reliability study of the computational thinking scales (CTS)},
journal = {Computers in Human Behavior},
volume = {72},
pages = {558-569},
year = {2017},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2017.01.005},
url = {https://www.sciencedirect.com/science/article/pii/S0747563217300055},
author = {Özgen Korkmaz and Recep Çakir and M. Yaşar Özden},
keywords = {Computer-mediated communication, Valuation methodologies, Pedagogical issues, Programming and programming languages, Teaching/learning strategies},
abstract = {It is possible to define Computational Thinking briefly as having the knowledge, skill and attitudes necessary to be able to use the computers in the solution of the life problems for production purposes. In this study, a scale has been developed for the purpose of determining the levels of computational thinking skills (CTS) of the students. CTS is a five-point likert type scale and consists of 29 items that could be collected under five factors. The study group of this work consists of 726 students educated at the levels of associate degree and undergraduate degree with formal education in Amasya University for the first application. For the second application 580 students who were educated in pedagogical formation education via distance education in Amasya University. The validity and reliability of the scale have been studied by conducting exploratory factor analysis, confirmatory factor analysis, item distinctiveness analyses, internal consistency coefficients and constancy analyses. As a result of the conducted analyses, it has been concluded that the scale is a valid and reliable measurement tool that could measure the computational thinking skills of the students. In addition; the digital age individuals are expected to have the computational thinking skill, and at what degree they have these skills, the revelation of whether the levels they have are sufficient or not are a requirement. Within this frame, it could be said that the scale could make significant contributions to the literature.}
}
@article{BERS2014145,
title = {Computational thinking and tinkering: Exploration of an early childhood robotics curriculum},
journal = {Computers & Education},
volume = {72},
pages = {145-157},
year = {2014},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2013.10.020},
url = {https://www.sciencedirect.com/science/article/pii/S0360131513003059},
author = {Marina Umaschi Bers and Louise Flannery and Elizabeth R. Kazakoff and Amanda Sullivan},
keywords = {Elementary education, Interactive learning environments, Pedagogical issues, Teaching/learning strategies, robotics, Programming, Early childhood},
abstract = {By engaging in construction-based robotics activities, children as young as four can play to learn a range of concepts. The TangibleK Robotics Program paired developmentally appropriate computer programming and robotics tools with a constructionist curriculum designed to engage kindergarten children in learning computational thinking, robotics, programming, and problem-solving. This paper documents three kindergarten classrooms' exposure to computer programming concepts and explores learning outcomes. Results point to strengths of the curriculum and areas where further redesign of the curriculum and technologies would be appropriate. Overall, the study demonstrates that kindergartners were both interested in and able to learn many aspects of robotics, programming, and computational thinking with the TangibleK curriculum design.}
}
@article{SHAMIR2022100415,
title = {Teaching machine learning in elementary school},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100415},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100415},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000994},
author = {Gilad Shamir and Ilya Levin},
keywords = {Computational thinking, Constructionism, Artificial intelligence, Machine learning, Elementary school, Programming},
abstract = {The emergence and ubiquity of Artificial Intelligence in the form of Machine Learning (ML) systems have revolutionized daily life. However, scant if any attention has been paid to ML in computing education, which continues to teach rule-based programming. A new, promising research field in education consists of acquainting children with ML to foster this much-needed shift from traditional rule-driven thinking to ML-based data-driven thinking. This article presents the development of computational thinking competencies in 12-year-old students who participated in a learning-by-design or a learning-by-teaching ML course. The results, based on a qualitative and quantitative evaluation of the students’ achievements, indicate that they demonstrated computational thinking competencies at various levels. The learning by design group evidenced greater development in computational skills, whereas the learning by teaching group improved in terms of computational perspective. These findings are discussed with respect to promoting children’s problem-solving competencies within a constructionist approach to ML.}
}
@article{HOU2020100720,
title = {Computational thinking training with technology for non-information undergraduates},
journal = {Thinking Skills and Creativity},
volume = {38},
pages = {100720},
year = {2020},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2020.100720},
url = {https://www.sciencedirect.com/science/article/pii/S1871187120301942},
author = {Hsing-Yu Hou and Somya Agrawal and Chin-Feng Lee},
keywords = {Computational thinking, Technology acceptance model, Visualization, Scratch, Tableau},
abstract = {Technology not only allows us to (co-)create, collect, store, and use knowledge and information, but it also enables us to connect with people and resources all over the world, to collaborate in the creation of knowledge, and to distribute and benefit from knowledge products. In this study, two visual and interactive pedagogies in information technology are used to train non-technical students and evaluate the performance and feedback of students in a programming course in the Department of Beauty Science. Computational thinking was integrated into the design and application of the programming subject. At the end of the semester, data were collected from 40 sophomore students in the Department of Beauty Science who answered the technology acceptance model (TAM) questionnaire and Learning Satisfactory Questionnaire after the training. An analysis was conducted using basic statistical and correlation methods, and the items demonstrated good reliability for Scratch and Tableau. The mean of 14 items in the TAM questionnaire was above 3.5 for Scratch, and that of four items was lower than 3.5 for Tableau. The mean of all the items was above 4.40 for the Learning Satisfactory Questionnaire. In the correlation analysis, the variables of perceived usefulness and perceived ease of use were positively related to the attitude and behavior in Scratch and Tableau. The use of visual and interactive programming pedagogies enhanced the interest of novice and non-technical students in learning technology. The learners were satisfied with the interactive pedagogies on computational and spatial intelligence.}
}
@article{ROMANGONZALEZ2017678,
title = {Which cognitive abilities underlie computational thinking? Criterion validity of the Computational Thinking Test},
journal = {Computers in Human Behavior},
volume = {72},
pages = {678-691},
year = {2017},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2016.08.047},
url = {https://www.sciencedirect.com/science/article/pii/S0747563216306185},
author = {Marcos Román-González and Juan-Carlos Pérez-González and Carmen Jiménez-Fernández},
keywords = {Computational thinking, Computational Thinking Test, Code literacy, Computer science education, Cognitive abilities, Cognitive assessment, Educational psychology, Primary education, Secondary education},
abstract = {Computational thinking (CT) is being located at the focus of educational innovation, as a set of problem-solving skills that must be acquired by the new generations of students to thrive in a digital world full of objects driven by software. However, there is still no consensus on a CT definition or how to measure it. In response, we attempt to address both issues from a psychometric approach. On the one hand, a Computational Thinking Test (CTt) is administered on a sample of 1,251 Spanish students from 5th to 10th grade, so its descriptive statistics and reliability are reported in this paper. On the second hand, the criterion validity of the CTt is studied with respect to other standardized psychological tests: the Primary Mental Abilities (PMA) battery, and the RP30 problem-solving test. Thus, it is intended to provide a new instrument for CT measurement and additionally give evidence of the nature of CT through its associations with key related psychological constructs. Results show statistically significant correlations at least moderately intense between CT and: spatial ability (r = 0.44), reasoning ability (r = 0.44), and problem-solving ability (r = 0.67). These results are consistent with recent theoretical proposals linking CT to some components of the Cattel-Horn-Carroll (CHC) model of intelligence, and corroborate the conceptualization of CT as a problem-solving ability.}
}
@article{PLOOG2024100653,
title = {The intentions of the designers of digital educational tools in early childhood education},
journal = {International Journal of Child-Computer Interaction},
volume = {40},
pages = {100653},
year = {2024},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2024.100653},
url = {https://www.sciencedirect.com/science/article/pii/S2212868924000217},
author = {Maria Ploog and Tomasz Wiktorski},
keywords = {Educational robots, Early childhood education, Designers' intention, Future competencies, Coding and computational thinking},
abstract = {The popularity of programmable robots in early childhood education is growing. Such robots are discussed in the literature from the points of view of teachers, parents and children. We add the role of robot designers to this list. Focusing on designers and specifically their intentions is beneficial in two settings: in teacher training and whenever using the robots in playing activities in ECE. We present a qualitative study on robot designer intentions, conducted by group interviews with designers of two common but significantly different programmable robots, the Kubo robot and the Rugged robot. Using Activity Theory as the underlying framework for the thematic analysis of the interviews, our data reveal a large overlap of the intentions of both groups. They express the common goal of preparing children for the future although through slightly different competencies: enhancing computational thinking and 21st century skills, respectively. Both groups highlight the relevance of subjects outside computer science, specifically beyond coding. Our data also show a design process difference the Rugged robot was developed with a teacher-oriented approach whereas the Kubo robot with an object-oriented approach.}
}
@article{CITTA2019103613,
title = {The effects of mental rotation on computational thinking},
journal = {Computers & Education},
volume = {141},
pages = {103613},
year = {2019},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103613},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519301666},
author = {Giuseppe Città and Manuel Gentile and Mario Allegra and Marco Arrigo and Daniela Conti and Simona Ottaviano and Francesco Reale and Marinella Sciortino},
keywords = {Computational thinking, Visuospatial skills, Mental rotation, Unplugged coding, STEM},
abstract = {Although several investigations of spatial reasoning and mental rotation skills have been conducted in research areas linked to STEM education, to the best of our knowledge, few of these studies have examined the relationship between spatial reasoning and computational thinking. Given this gap in the literature, the present study investigates the role and action of spatial reasoning, and specifically the effects of mental rotation on computational thinking within an embodied and enacted perspective. To achieve this, we carried out a study involving 92 students in five primary-school classes (1st grade - 5th grade). The findings reveal a positive correlation between computational thinking skill and mental rotation ability.}
}
@article{TAYLOR201999,
title = {Grouping matters in computational robotic activities},
journal = {Computers in Human Behavior},
volume = {93},
pages = {99-105},
year = {2019},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2018.12.010},
url = {https://www.sciencedirect.com/science/article/pii/S074756321830596X},
author = {Kellie Taylor and Youngkyun Baek},
keywords = {Computational robotics, STEM education, Computational thinking, Robotics performance, Learning motivation towards computer programming, Robotics in music composition},
abstract = {This study examines the impact of grouping by gender and group roles on robotics performance, computational thinking skills, and learning motivation towards computer programming. One hundred ninety-one students in fourth and fifth grade completed the project. LEGO Mindstorms EV3 robotics were used to compose and program music in groups of three to four students. The robotics project was completed over the course of fourteen weeks for 1 h each week. Gender-structured groups of all female, all male and mixed female and male were randomly assigned in each class. All groups in participating six classrooms were assigned one of three group roles implementation, which were fixed, rotating and no role. This study is significant towards identifying group scaffolds and supports that can produce benefits for all students in robotic activities. Results indicated that group roles matter when students are working on collaborative robotics projects. Three different implementations of group roles in robotics activities demonstrated an impact on robotics performance scores. Gender composition of the group did not impact groups' robotics performance. Group roles also impacted student computational thinking skills, while gender composition of the group still demonstrated no significant difference. Finally, while group roles demonstrated a difference in learning motivation towards computer programming, gender composition demonstrated no difference in learning motivation towards computer programming.}
}
@article{BENVENUTI2023107903,
title = {Artificial intelligence and human behavioral development: A perspective on new skills and competences acquisition for the educational context},
journal = {Computers in Human Behavior},
volume = {148},
pages = {107903},
year = {2023},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2023.107903},
url = {https://www.sciencedirect.com/science/article/pii/S0747563223002546},
author = {Martina Benvenuti and Angelo Cangelosi and Armin Weinberger and Elvis Mazzoni and Mariagrazia Benassi and Mattia Barbaresi and Matteo Orsoni},
keywords = {Artificial intelligence, Education, Competencies, Robot tutors},
abstract = {Despite the significant emphasis placed on incorporating 21st century skills into the educational framework, particularly at the primary level, recent scholarly works indicate considerable variation in the implementation of these skills across different countries and regions, suggesting a demand for further research specifically focusing on primary education. The indications of the Digicomp framework and 21st-century skills in Europe have outlined the key competences for lifelong learning needed for all citizens, including teachers and students. In this perspective, Education plays a fundamental role in ensuring that citizens acquire the required skills. The objective in the common European framework is clear: to initiate a transition from the culture of knowledge to the culture of competence. Nowadays, technological advancement allows the researchers to create and combine different frameworks with the perspective of an even more tailored, and engaged education, some examples derived from the implementation of Virtual Reality (VR) and Augmented Reality (AR), in the combination of Gamification and AI, or the development of Intelligent Tutoring Systems (ITS) to foster and create an even more personalized learning and teaching. Following these premises, in this paper, we want to point out new research reflections and perspectives that could help researchers, teachers, educators (and consequently students) to reflect on the introduction of new technologies (e.g., artificial intelligence, robot tutors) and on how these can affect on human behavioral development and on the acquisition of new skills and competences (Specifically: Creativity, Critical Thinking, Problem Solving, and Computational Thinking) for the educational context. The analysis carried on, suggests a perspective on how creativity, critical thinking, and problem-solving can be effective in promoting computational thinking, and how Artificial Intelligence (AI) could be an aid instrument to teachers in the fostering of creativity, critical thinking, and problem-solving in schools and educational contexts.}
}
@article{ALLSOP201930,
title = {Assessing computational thinking process using a multiple evaluation approach},
journal = {International Journal of Child-Computer Interaction},
volume = {19},
pages = {30-55},
year = {2019},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2018.10.004},
url = {https://www.sciencedirect.com/science/article/pii/S2212868918300588},
author = {Yasemin Allsop},
keywords = {Game programming, Elementary school, Scratch, Alice, Assessment, Computational thinking, Metacognition, Coding},
abstract = {This study explored the ways that the Computational Thinking (CT) process can be evaluated in a classroom environment. Thirty Children aged 10–11 years, from a primary school in London took part in a game-making project using the Scratch and Alice 2.4 applications for eight months. For the focus of this specific paper, data from participant observations, informal conversations, problem-solving sheets, semi-structured interviews and children’s completed games were used to make sense of elements of the computational thinking process and approaches to evaluate these elements in a computer game design context. The discussions around what CT consists, highlighted the complex structure of computational thinking and the interaction between the elements of artificial intelligence (AI), computer, cognitive, learning and psychological sciences. This also emphasised the role of metacognition in the Computational Thinking process. These arguments illustrated that it is not possible to evaluate Computational Thinking using only programming constructs, as CT process provides opportunities for developing many other skills and concepts. Therefore a multiple evaluation approach should be adopted to illustrate the full learning scope of the Computational Thinking Process. Using the support of literature review and the findings of the data analysis I proposed a multiple approach evaluation model where ‘computational concepts’, ‘metacognitive practices’, and ‘learning behaviours’ were discussed as the main elements of the CT process. Additionally, in order to investigate these dimensions within a game-making context, computer game design was also included in this evaluation model.}
}
@article{HOOSHYAR2021106575,
title = {An adaptive educational computer game: Effects on students' knowledge and learning attitude in computational thinking},
journal = {Computers in Human Behavior},
volume = {114},
pages = {106575},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2020.106575},
url = {https://www.sciencedirect.com/science/article/pii/S074756322030323X},
author = {Danial Hooshyar and Liina Malva and Yeongwook Yang and Margus Pedaste and Minhong Wang and Heuiseok Lim},
keywords = {Adaptive educational computer game, Computational thinking knowledge and skills, Adaptive learning, Adaptive game-play},
abstract = {Several studies have reported that adaptivity and personalization in educational computer games facilitate reaching their full educational potential. However, there is little effort to develop adaptive educational computer games for promoting students' computational thinking (CT). In this study, an adaptive computer game is introduced, called AutoThinking, that not only promotes both CT skills and conceptual knowledge, but also provides adaptivity in both game-play and learning processes. To evaluate the possible effects of the game, an experimental study was carried out with 79 students in an elementary school in Estonia. AutoThinking and a conventional technology-enhanced learning approach were used for teaching CT to the experimental and control group, respectively. Our results reveal that AutoThinking improved students’ CT skills and conceptual knowledge better than the conventional approach. It was also found that students with a low and high level of prior knowledge made higher improvement in knowledge gain using the adaptive game compared to the traditional approach, especially those students with lower prior knowledge. Finally, our findings show that the adaptive game could also improve students' learning attitude toward CT better than the conventional approach, especially those students with higher prior learning attitudes.}
}
@article{TIKVA2021100849,
title = {A systematic mapping study on teaching and learning Computational Thinking through programming in higher education},
journal = {Thinking Skills and Creativity},
volume = {41},
pages = {100849},
year = {2021},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2021.100849},
url = {https://www.sciencedirect.com/science/article/pii/S187118712100064X},
author = {Christina Tikva and Efthimios Tambouris},
keywords = {Computational Thinking, Programming, Higher education},
abstract = {Computational Thinking (CT) through programming in higher education is considered an important skill for students to become problem solvers and thrive in the new digital workplace. Despite the wide interest, a systematic map of CT through programming in higher education is still missing. The aim of this study is twofold. First, we aim to provide a systematic map of the relevant research by identifying the areas and sub-areas of CT through programming teaching and learning in higher education. Second, we aim to investigate these areas based on two dimensions: their evolution over the years and the branches to which CT is applied. For this purpose, we apply a systematic mapping methodology. Main results include the identification of the CT areas of Knowledge Base, Assessment, Learning Strategies, Tools, Factors and Capacity Building. Of these, Knowledge Base, Assessment and Tools have significantly evolved throughout the years, while Capacity Building has only recently emerged. In addition, the introduction of CT to undergraduate students and preservice teachers differs mainly in the tools used and the CT elements that are assessed. The study contributes to the field by providing a structured type of research conducted and identifying gaps and opportunities for future research.}
}
@article{KONSTANTINIDOU2022104424,
title = {Teaching with technology: A large-scale, international, and multilevel study of the roles of teacher and school characteristics},
journal = {Computers & Education},
volume = {179},
pages = {104424},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104424},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521003018},
author = {Evi Konstantinidou and Ronny Scherer},
keywords = {Data science applications in education, Information literacy, Teaching/learning strategies, 21st century abilities},
abstract = {Providing high-quality instruction with technology has become more important than ever before. However, the instructional practices and the degree to which key skills, such as digital literacy and computational thinking, are emphasized in classrooms vary considerably between teachers, schools, and countries. The present study was aimed at explaining this variation in the frequency of teaching practices with technology and teachers' emphasis on developing students' computer and information literacy and computational thinking by key aspects of teacher motivation and expertise, school conditions and priorities, and countries' economy and innovation. Utilizing large-scale, representative data from the International Computer and Information Literacy Study (ICILS) 2018 (15,015 teachers in 1195 schools in eight countries), we performed multilevel structural equation modeling and regression trees and found that teacher motivation and collaboration were positively and consistently linked to teaching practices across countries. Besides, principals' expectations concerning the teaching with technology explained variation in Finnish and German schools. In three countries, teachers' professional development was related to their teaching practices. Finally, countries’ economic development and innovation explained variation in the teacher-level effects. Our study sheds new light on the possible factors related to teaching with technology and advances the field by taking a multilevel and international perspective on these factors.}
}
@article{ROMANGONZALEZ201847,
title = {Can computational talent be detected? Predictive validity of the Computational Thinking Test},
journal = {International Journal of Child-Computer Interaction},
volume = {18},
pages = {47-58},
year = {2018},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2018.06.004},
url = {https://www.sciencedirect.com/science/article/pii/S221286891730034X},
author = {Marcos Román-González and Juan-Carlos Pérez-González and Jesús Moreno-León and Gregorio Robles},
keywords = {Computational thinking, Computational thinking test, Computational talent, Cognitive assessment, Predictive validity},
abstract = {Computational thinking (CT) is arising as a set of problem-solving skills that must be acquired by the new generations of students to fully understand and participate in our computer-based world. However, from a psychometric approach, we are still at an early stage regarding the definition and assessment of CT as a psychological variable. One way to advance in this area is to investigate whether ‘computationally talented’ students (i.e., ‘computational top thinkers’) can be detected even before learning to code; and, if so, how to teach them properly to fully develop their high-computational ability. This paper presents several empirical concatenated studies about the predictive validity of the Computational Thinking Test (CTt), which is administered on a sample of 314 middle school Spanish students (n=314). We report the predictive validity of the CTt, conducted at the beginning of the quarter, with respect to academic performance (Informatics, Mathematics, and Language) and learning analytics in a Code.org course collected at the end of the quarter. We also analyze the predictive validity of the CTt to early distinguish between ‘computational regular thinkers’ and ‘computational top thinkers’ (i.e., those who spontaneously accelerated from the ‘block-based’ programming environment of Code.org to the ‘text-based’ one of Khan Academy). Finally, we perform a case study over two of the students categorized as ‘computational top thinkers’, in which one of their coding products written in Processing JavaScript is described. Our results demonstrate that ‘computationally talented’ students can be detected in middle school, and that these subjects have the ability to accelerate in the Computer Science Education standards between 1 and 2 years compared to the regular learners. This could have major implications on the emerging computing curricula, which should take into account these individual differences in computational ability and ‘learning-how-to-code’ speed to ensure an appropriate progression for every student.}
}
@article{CHALMERS201893,
title = {Robotics and computational thinking in primary school},
journal = {International Journal of Child-Computer Interaction},
volume = {17},
pages = {93-100},
year = {2018},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2018.06.005},
url = {https://www.sciencedirect.com/science/article/pii/S2212868917300235},
author = {Christina Chalmers},
keywords = {Robots, Computational thinking, Coding, WeDo 2.0},
abstract = {This paper reports on a research study that examined how Australian primary school teachers integrated robotics and coding in their classrooms and the perceived impact this had on students’ computational thinking skills. The study involved four primary school teachers, (Years 1–6) from four schools, introducing LEGO® WeDo® 2.0 robotics kits in their classrooms. The data collected from questionnaires, journal entries, and semi-structured interviews were analyzed using computational thinking and teaching frameworks. The results demonstrate that exploring with and using the robot kits, and activities, helped the teachers build their confidence and knowledge to introduce young students to computational thinking. The study identified that teacher professional development (PD) needs to focus explicitly on how to teach developmentally appropriate robotics-based STEM activities that further promote computational concepts, practices, and perspectives.}
}
@article{LU2023100154,
title = {Developing a weather prediction project-based machine learning course in facilitating AI learning among high school students},
journal = {Computers and Education: Artificial Intelligence},
volume = {5},
pages = {100154},
year = {2023},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2023.100154},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000334},
author = {Wen-Yen Lu and Szu-Chun Fan},
keywords = {Artificial intelligence, Machine learning, Computational thinking, Secondary education},
abstract = {The rapid growth of artificial intelligence (AI) technology has changed lifestyles, work patterns, and educational approaches. However, courses that can guide students through the practical applications of AI technology are still scarce in K-12 education. This study aimed to develop a project-based machine learning (ML) course for the implementation of AI technology. The core idea of this course, which focused on the supervised learning of AI ML technology, was designed based on the project of weather prediction. Furthermore, data collection and status display were realized using various hardware devices such as Arduino and sensors, whereas ML algorithms were implemented in Python programming language. A total of 68 eleventh-grade senior high school students from a public school in Southern Taiwan participated in this study. The main variables included understanding AI concepts, computational thinking (CT), and learning attitude. Data were analyzed using quantitative statistics, including descriptive statistics, t-test, and analysis of covariance, supplemented with qualitative data. Based on the findings, the following conclusions were drawn: (1) the proposed course on the implementation of ML helps students understand the basic concepts of AI; (2) students demonstrate a significant improvement in CT skills after attending this course; (3) although the students’ attitude toward learning AI shows no significant change after attending this course, their overall view for it is positive; (4) contrary to their learning attitude, the CT skills among the students with different capabilities of learning AI are significantly dissimilar. Overall, the machine-learning implementation course developed in this study can serve as a reference for promoting AI education in the future. However, considering learners’ prior knowledge in programming, setting up appropriate learning scaffolding for them, and providing them with more examples of the applications of AI in real-life scenarios is still necessary when conducting the course for improving the students’ attitude toward AI.}
}
@article{SWAID20153657,
title = {Bringing Computational Thinking to STEM Education},
journal = {Procedia Manufacturing},
volume = {3},
pages = {3657-3662},
year = {2015},
note = {6th International Conference on Applied Human Factors and Ergonomics (AHFE 2015) and the Affiliated Conferences, AHFE 2015},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2015.07.761},
url = {https://www.sciencedirect.com/science/article/pii/S2351978915007623},
author = {Samar I. Swaid},
keywords = {Computational thinking, STEM, Computational science, HBCU, Cyberinfrastructure},
abstract = {Today, as advanced technologies and cloud computing tools emerge, it is imperative that such innovations are sustained with knowledge and skill set among STEM educators and practitioners. In this paper, the author reports on a project, HBCU-UP II, that works on bringing Computational Thinking to Science, Technology, Engineering, and Mathematics (STEM) disciplines. A Computational-Thinking based strategy is adopted to enforce thinking computationally in STEM gate-keeping courses. The paper presents framework, implementation and outcomes. This on-going project contributes to efforts to establish computational thinking as a universally applicable attitude that is meshed within STEM conversations, education, and curricula. This paper will be particularly useful for researchers interested in Computational Thinking and its applications in STEM education, in particular and higher education in general}
}
@article{ANGELI2020106185,
title = {Computational thinking education: Issues and challenges},
journal = {Computers in Human Behavior},
volume = {105},
pages = {106185},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.106185},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219303978},
author = {Charoula Angeli and Michail Giannakos},
keywords = {Computational thinking, Digital competences, Coding, Technological fluency, Algorithmic thinking, Robotics},
abstract = {Computational Thinking is a term applied to describe the increasing attention on students' knowledge development about designing computational solutions to problems, algorithmic thinking, and coding. It focuses on skills children develop from practicing programming and algorithms, and enables the development of qualities such as abstract thinking, problem solving, pattern recognition, and logical reasoning. Contemporary educational and infrastructural developments, like “CS for All” (https://www.csforall.org/), ISTE's Standards for Students in Computational Thinking (https://www.iste.org/explore/Solutions/Computational-thinking-for-all?articleid=152), Computer Science Teachers Association's Concepts of Computational Thinking (http://advocate.csteachers.org/2014/09/15/computational-thinking-and-beyond/), and the appearance of tools such as robotics, 3D printing, microprocessors, and intuitive programming languages posit Computational Thinking as a very promising area to support these learning competences. In this special issue of Computers in Human Behavior, the Editors report four studies conducted by interdisciplinary teams. The introduction to the special issue also draws attention to the great potential and need for further research in the area of Computational Thinking Education to engage students in meaningful learning so as to develop useful thinking skills and digital competences. Finally, the Editorspropose directions for future research and practice in Computational Thinking Education.}
}
@incollection{DING202319,
title = {Mathematics in STEM education},
editor = {Robert J Tierney and Fazal Rizvi and Kadriye Ercikan},
booktitle = {International Encyclopedia of Education (Fourth Edition)},
publisher = {Elsevier},
edition = {Fourth Edition},
address = {Oxford},
pages = {19-27},
year = {2023},
isbn = {978-0-12-818629-9},
doi = {https://doi.org/10.1016/B978-0-12-818630-5.13035-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128186305130350},
author = {Meixia Ding and Jinfa Cai},
keywords = {Computational thinking, Content, Explicit, Integration, K–12, Language tool, Mathematics, Process, Mathematical reasoning, STEM, Thinking tool},
abstract = {In this article, we discuss how mathematics can play a role in STEM activities in K–12 classrooms. From the perspective of content, we argue that mathematics serves as a language tool to help represent/model STEM activities and explain/interpret identified solutions. From the perspective of process, we argue that mathematics serves as a thinking tool because mathematical reasoning is at the core of problem solving. In addition, computational thinking is a critical skill for solving problems in complex systems. We conclude our study with three suggestions that help make mathematics more explicit in K–12 STEM classrooms.}
}
@article{BUCCIARELLI2022100443,
title = {The causes of difficulty in children’s creation of informal programs},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100443},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100443},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921001185},
author = {Monica Bucciarelli and Robert Mackiewicz and Sangeet S. Khemlani and P.N. Johnson-Laird},
keywords = {Computational thinking, Deduction, Informal programs, Kinematic simulations, Recursion},
abstract = {We present a theory of the causes of difficulty in children’s creation of informal programs. Ten-year-old children are able to devise such programs to rearrange the order of the cars in trains on a simple railway track with a single siding. According to the theory, they rely on kinematic mental models that simulate the required sequence of steps, and we devised a computer program, mAbducer, which does so too in creating its own programs for such rearrangements. An experiment showed that a simple measure of the complexity of its programs, based on Kolmogorov complexity, predicts ten-year-olds’ difficulty in this task: the measure is the number of words in mAbducer’s programs for solving the rearrangement in a minimal number of moves. Complexity, in turn, reflects the structure of the required programs, which need loops of moves to be repeated, and often moves before and after such a loop. Children’s errors are predictable in both their location and nature. Our results therefore have implications for the assessment and pedagogy of computational thinking.}
}
@article{SUN2023101340,
title = {Does text-based programming improve K-12 students’ CT skills? Evidence from a meta-analysis and synthesis of qualitative data in educational contexts},
journal = {Thinking Skills and Creativity},
volume = {49},
pages = {101340},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101340},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123001098},
author = {Lihui Sun and Liang Zhou},
keywords = {K-12, Computational thinking (CT) skills, Text-based programming, Instruction design, Meta-analysis},
abstract = {Promoting computational thinking (CT) skills in programming activities has become a key issue in K-12 education, and the shift from visual to text-based programming is an inevitable trend in programming education. Although research on K-12 text-based programming to promote CT skills has been increasing, a literature review that systematically organizes and analyzes it has not yet emerged. Moreover, there are no uniform conclusions on how to design text-based programming activities to effectively promote students’ acquisition of CT skills. The purpose of this study was mainly to determine the effectiveness of using text-based programming to enhance K-12 students’ CT skills, to explore the effects of various text-based programming instructional design factors on CT skill acquisition, and to discuss the key issues and future development of text programming in the K-12 stage. In this study using the quantitative method of meta-analysis and the qualitative method of systematic literature review, 46 studies of text-based programming on K-12 students’ CT skills were retrieved, of which 19 empirical studies including 37 effects size met the inclusion criteria for the meta-analysis and were therefore used as a meta-analysis. The results showed that text-based programming improved the CT skills of K-12 students overall (Hedges’ g = 0.71, 95% CI [0.51, 0.90], p < 0.01). No publication bias was detected. In addition, the results of the moderator analysis revealed that: 1) text programming had the greatest impact on computational thinking development in middle school students (g = 0.833, p = <0.05); 2) the duration of text programming instruction had the most significant positive impact on students' CT at 16–20 weeks (g = 1.038, p <0.05); 3) the moderating effect of different assessment tools on CT skills in text programming instruction The difference was statistically significant, and the test assessment method had a highly significant positive moderating effect on CT skills of students in grades K-12 (g = 1.005, p < 0.05); 4) The moderating effect of different student sample sizes on students' computational thinking development was significantly different, and the implementation of text-based programming instruction had the most significant effect on students' CT improvement among students with sample sizes of 41 ∼ 60 (g = 0.921, p < 0.05); 5) There were no significant differences in the effects of different text-based programming languages and learning environments on students' computational thinking.However, there are still barriers to developing instructional practices for text-based programming to foster CT in K-12 students, such as the highly abstract and complex syntax of text-based programming. This study found that the most critical issues that need to be addressed in current text-based programming to foster CT in K-12 students are the lack of student interest in text-based programming and the misconceptions that arise when students move from visual programming to text-based programming. To address these issues, future research could begin with improving teaching methods and increasing student motivation and interest. To address these issues, future research could begin with improving teaching methods and increasing students' motivation and interest.}
}
@article{SHUTE2017142,
title = {Demystifying computational thinking},
journal = {Educational Research Review},
volume = {22},
pages = {142-158},
year = {2017},
issn = {1747-938X},
doi = {https://doi.org/10.1016/j.edurev.2017.09.003},
url = {https://www.sciencedirect.com/science/article/pii/S1747938X17300350},
author = {Valerie J. Shute and Chen Sun and Jodi Asbell-Clarke},
keywords = {Computational thinking, Computational literacy, Problem solving, Programming},
abstract = {This paper examines the growing field of computational thinking (CT) in education. A review of the relevant literature shows a diversity in definitions, interventions, assessments, and models. After synthesizing various approaches used to develop the construct in K-16 settings, we have created the following working definition of CT: The conceptual foundation required to solve problems effectively and efficiently (i.e., algorithmically, with or without the assistance of computers) with solutions that are reusable in different contexts. This definition highlights that CT is primarily a way of thinking and acting, which can be exhibited through the use particular skills, which then can become the basis for performance-based assessments of CT skills. Based on the literature, we categorized CT into six main facets: decomposition, abstraction, algorithm design, debugging, iteration, and generalization. This paper shows examples of CT definitions, interventions, assessments, and models across a variety of disciplines, with a call for more extensive research in this area.}
}
@article{LI2023101369,
title = {A study on the relationship between student' learning engagements and higher-order thinking skills in programming learning},
journal = {Thinking Skills and Creativity},
volume = {49},
pages = {101369},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101369},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123001372},
author = {Wei Li and Ji-Yi Huang and Cheng-Ye Liu and Judy C.R. Tseng and Shu-Pan Wang},
keywords = {Programming learning, Higher-order thinking skills, Learning engagements, K-12},
abstract = {Learning engagements in programming learning activities are critical to developing students' higher-order thinking skills. This study aimed to investigate the relationship between K-12 students' learning engagement levels (i.e., cognitive engagement, emotional engagement, and behavioral engagement) and higher-order thinking skills (i.e., computational thinking, problem solving, creative thinking, and critical thinking) in programming learning, and the moderating effects of behavioral engagement and emotional engagement on this relationship. A total of 714 K-12 students in China's Zhejiang Province participated in this study and completed an online questionnaire, which included the learning engagement scale and the high-order thinking tendency scale. Cross-sectional survey data were analyzed using Pearson's correlation coefficient and hierarchical multiple regression as a way to examine the relationship between the variables. The results showed that cognitive engagement, emotional engagement, and behavioral engagement were all key factors in developing those students' higher-order thinking for programming learning activities in K-12 students during associated activities. Furthermore, when the students' emotional engagements were elevated, the positive relationships between cognitive engagement, computational thinking, and creative thinking were closer. Inversely, when students' behavioral engagement was high, the positive relationship between cognitive engagement and critical thinking, and the positive relationship between emotional engagement and problem-solving and critical thinking became looser. These results can help deepen educators' understanding of the relationship between learning engagement and higher-order thinking skills to facilitate their search for effective strategies to improve programming instruction. Additionally, it can provide a more precise research direction for the broader development of programming education.}
}
@article{DURAK2018191,
title = {Analysis of the relation between computational thinking skills and various variables with the structural equation model},
journal = {Computers & Education},
volume = {116},
pages = {191-202},
year = {2018},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2017.09.004},
url = {https://www.sciencedirect.com/science/article/pii/S0360131517302087},
author = {Hatice Yildiz Durak and Mustafa Saritepeci},
keywords = {Computational thinking, Evaluation methodologies, Media in education, Programming and programming languages, Secondary education},
abstract = {The aim of this study is to determine how much various variables explain students' computational thinking (CT) skills. Furthermore, it was aimed to produce a model that explains and predicts the relations between computational thinking skills and various variables. Study group consists of 156 students who were studying in 5–12. Class in 2015–2016 academic year in different schools in Ankara. Relational screening model was used in this research. Two different data collection instruments were used in this research. The first one is “Personal Information Form”. The second one is “Computational Thinking Skills Scale”. Structural Equation Model was used in data analysis so as to produce a model that explains and predicts the relations between computational thinking skills and various variables. According to research results, it was found that computational thinking skill was highly predicted by variables, respectively; “thinking styles, academic success in mathematic class, attitude against mathematic class”.}
}
@article{PENG20231143,
title = {Design of Data Persistence for Network Resources Recommendation System Based on Hibernate Architecture},
journal = {Procedia Computer Science},
volume = {228},
pages = {1143-1151},
year = {2023},
note = {3rd International Conference on Machine Learning and Big Data Analytics for IoT Security and Privacy},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2023.11.149},
url = {https://www.sciencedirect.com/science/article/pii/S1877050923019804},
author = {Xia Peng and Jun Li and Yongchang Ren},
keywords = {Hibernate, "Python Programming", Network Resources, Recommendation System, Data Persistence},
abstract = {The Python language is more focused on problem solving, which is in line with the era of computational thinking, and the teaching of Python language course requires students to systematically master the basic concepts, programming ideas and programming techniques of Python, and have the idea of object-oriented software design technology. We have developed a recommended system of online resources for "Python Programming" course to solve the problem of students' access to resources and deepen the teaching reform of the Python Programming course. Data persistence is an important task in system development, and Hibernate is the most popular O/R Mapping framework. The data persistence design based on Hibernate solves the key technical problems in the development of the network resource recommendation system for the "Python Programming" course, and improves the efficiency and maintainability of the software system development.}
}
@incollection{KIRK2013281,
title = {Chapter 13 - Parallel Programming and Computational Thinking},
editor = {David B. Kirk and Wen-mei W. Hwu},
booktitle = {Programming Massively Parallel Processors (Second Edition)},
publisher = {Morgan Kaufmann},
edition = {Second Edition},
address = {Boston},
pages = {281-295},
year = {2013},
isbn = {978-0-12-415992-1},
doi = {https://doi.org/10.1016/B978-0-12-415992-1.00013-4},
url = {https://www.sciencedirect.com/science/article/pii/B9780124159921000134},
author = {David B. Kirk and Wen-mei W. Hwu}
}
@article{MARCELINO2018470,
title = {Learning Computational Thinking and scratch at distance},
journal = {Computers in Human Behavior},
volume = {80},
pages = {470-477},
year = {2018},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2017.09.025},
url = {https://www.sciencedirect.com/science/article/pii/S0747563217305526},
author = {Maria José Marcelino and Teresa Pessoa and Celeste Vieira and Tatiana Salvador and António José Mendes},
keywords = {Computational Thinking, Scratch, Teacher training, E-learning, Pedagogical innovation},
abstract = {Learning Computational Thinking concepts by all has gained quite importance in last years. Scratch is also one of the most used products to promote it worldwide. Yet, most teachers face difficulties when using it in the classroom with their students. With this idea in mind we developed and run a distance education course under the Project of Distance Education of the University of Coimbra specially designed for elementary school teachers to learn both Computational Thinking concepts and Scratch via an e-learning course using Moodle as a Learning Management System. In this paper we describe this first experience of teaching and learning online, the results obtained and also our future work about this course. Results of this first experience showed that it was possible for the trainees to learn Computational Thinking concepts and Scratch programming and also to develop useful products for their classroom practice using this modality of teaching and learning. As such, a second edition of the course is already planned to take place shortly.}
}
@article{LI2012498,
title = {A Unified Approach to Teach Computational Thinking for First Year Non–CS Majors in an Introductory Course},
journal = {IERI Procedia},
volume = {2},
pages = {498-503},
year = {2012},
note = {International Conference on Future Computer Supported Education, August 22- 23, 2012,Fraser Place Central - Seoul},
issn = {2212-6678},
doi = {https://doi.org/10.1016/j.ieri.2012.06.123},
url = {https://www.sciencedirect.com/science/article/pii/S2212667812001311},
author = {Tun Li and Ting Wang},
keywords = {Computational thinking, curriculum, unified, non–CS majors},
abstract = {In this paper, we report our two–year experience offering an introductory computational thinking course for all first year students with no prior related background. In this course, we explore to seek a unified approach to teach non–CS majors and to find out to what extent they can be taught same as CS–majors. We describe our motivation for the proposed approach, the selection of topics, adoption of teaching methods, feedback from the survey at the end of the course, and some promising conclusions based on our experiences and student feedback.}
}
@article{GARCIAPENALVO2018407,
title = {Exploring the computational thinking effects in pre-university education},
journal = {Computers in Human Behavior},
volume = {80},
pages = {407-411},
year = {2018},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2017.12.005},
url = {https://www.sciencedirect.com/science/article/pii/S0747563217306854},
author = {Francisco José García-Peñalvo and Antònio José Mendes},
keywords = {Computational thinking, 21st century competences, Coding, Pre-university education},
abstract = {Several countries have usually adopted several priorities for developing ICT competences from kindergarten to secondary education. Most of them are focused on the development of key competences and/or coding skills. Although coding may be very attractive for young students and a very good practice or experience, it could be more interesting to develop students' logical thinking skills and problem-solving skills throughout programming approaches or computational thinking. This is a very exciting challenge with lots of possibilities regarding coding, robots, mobiles devices, Arduino-based application, game-based learning and so on. Thus, it is very important to explore the effect that these experiences have been taking into the pre-university students, both at primary and secondary education, with a special focus on the computational thinking as one of the components inside the toolbox to develop a reflexive and critical education in order to help children to solve problems using the technology with which they will live daily.}
}
@article{LAURENT2022101667,
title = {Impact of programming on primary mathematics learning},
journal = {Learning and Instruction},
volume = {82},
pages = {101667},
year = {2022},
issn = {0959-4752},
doi = {https://doi.org/10.1016/j.learninstruc.2022.101667},
url = {https://www.sciencedirect.com/science/article/pii/S0959475222000883},
author = {Manon Laurent and Rosamaria Crisci and Pascal Bressoux and Hamid Chaachoua and Cécile Nurra and Erica {de Vries} and Pierre Tchounikine},
keywords = {Computational thinking, Programming activity, Mathematics learning, Primary school, Randomized trial, Learning transfer},
abstract = {The aim of this study is to investigate whether a programming activity might serve as a learning vehicle for mathematics acquisition in grades four and five. For this purpose, the effects of a programming activity, an essential component of computational thinking, were evaluated on learning outcomes of three mathematical notions: Euclidean division (N = 1,880), additive decomposition (N = 1,763) and fractions (N = 644). Classes were randomly assigned to the programming (with Scratch) and control conditions. Multilevel analyses indicate negative effects (effect size range −0.16 to −0.21) of the programming condition for the three mathematical notions. A potential explanation of these results is the difficulties in the transfer of learning from programming to mathematics.}
}
@article{HSU2018296,
title = {How to learn and how to teach computational thinking: Suggestions based on a review of the literature},
journal = {Computers & Education},
volume = {126},
pages = {296-310},
year = {2018},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2018.07.004},
url = {https://www.sciencedirect.com/science/article/pii/S0360131518301799},
author = {Ting-Chia Hsu and Shao-Chen Chang and Yu-Ting Hung},
keywords = {Applications in subject areas, Pedagogical issues, Programming and programming languages, Teaching/learning strategies},
abstract = {Computational Thinking (CT) is seen as an important competence that is required in order to adapt to the future. However, educators, especially K-12 teachers and researchers, have not clearly identified how to teach it. In this study, a meta-review of the studies published in academic journals from 2006 to 2017 was conducted to analyze application courses, adopted learning strategies, participants, teaching tools, programming languages, and course categories of CT education. From the review results, it was found that the promotion of CT in education has made great progress in the last decade. In addition to the increasing number of CT studies in different countries, the subjects, research issues, and teaching tools have also become more diverse in recent years. It was also found that CT has mainly been applied to the activities of program design and computer science, while some studies are related to other subjects. Meanwhile, most of the studies adopted Project-Based Learning, Problem-Based Learning, Cooperative Learning, and Game-based Learning in the CT activities. In other words, such activities as aesthetic experience, design-based learning, and storytelling have been relatively less frequently adopted. Most of the studies focused on programming skills training and mathematical computing, while some adopted a cross-domain teaching mode to enable students to manage and analyze materials of various domains by computing. In addition, since the cognitive ability of students of different ages varies, the CT ability cultivation methods and content criteria should vary accordingly. Moreover, most studies reported the learners' CT performance and perspectives, while their information society ability was seldom trained. Accordingly, the research trends and potential research issues of CT are proposed as a reference for researchers, instructors, and policy makers.}
}
@article{MARQUEZ2024107434,
title = {Inclusion of individuals with autism spectrum disorder in Software Engineering},
journal = {Information and Software Technology},
volume = {170},
pages = {107434},
year = {2024},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2024.107434},
url = {https://www.sciencedirect.com/science/article/pii/S0950584924000399},
author = {Gastón Márquez and Michelle Pacheco and Hernán Astudillo and Carla Taramasco and Esteban Calvo},
keywords = {Autism spectrum disorders, Systematic multivocal mapping study, Software engineering},
abstract = {Context:
Software Engineering is dedicated to the systematic and efficient development of software, which necessitates the active participation of all team members and a recognition of their unique skills and abilities, including those with autism spectrum disorders (ASD). The inclusion of individuals with ASD presents new perspectives, yet there is a lack of systematic evidence regarding the primary obstacles and potential benefits associated with their inclusion.
Objective:
This paper aims to identify, characterize, and describe barriers, facilitators, and methodological proposals described by the community to include individuals with ASD in the discipline of Software Engineering.
Methods:
We conducted a comprehensive systematic multivocal mapping study to evaluate the existing evidence on the inclusion of individuals with ASD in Software Engineering.
Results:
We obtained 34 primary studies from which we identified the main facilitators of motivation to learn new skills, attention to detail, and the ability to report and visualize patterns. In contrast, the main barriers detected were communication, a lack of neurodivergent computational thinking, and sensory integration. Additionally, we identified and classified four categories of proposals that allowed the inclusion of individuals with ASD: (i) using virtual reality, (ii) creating more inclusive workspaces, (iii) encouraging neurodivergent computational thinking, and (iv) improving social skills.
Conclusions:
This study identifies the principal elements that ought to be taken into consideration when allocating tasks and roles to individuals with ASD in software development.}
}
@article{CARLBORG2019130,
title = {The scope of autonomy when teaching computational thinking in primary school},
journal = {International Journal of Child-Computer Interaction},
volume = {21},
pages = {130-139},
year = {2019},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2019.06.005},
url = {https://www.sciencedirect.com/science/article/pii/S2212868918301053},
author = {Niklas Carlborg and Markus Tyrén and Carl Heath and Eva Eriksson},
keywords = {Computational thinking, Autonomy, Education},
abstract = {During the 21st century, there has been an increased interest in the field of computational thinking as a consequence of the ever faster technical development. However, educating future generations in programming and computational thinking is not trivial. Many different platforms and teaching approaches can be used for this purpose. Inspired by the UK initiative with BBC micro:bit, this paper strives to identify what may be important to consider when designing teaching materials with the BBC micro:bit for training Swedish primary school learners’ computational thinking skills relating to mathematical and technical school subjects. This has been investigated in an iterative process, by conducting 21 workshops with the goal to support primary school teachers in developing BBC micro:bit teaching materials. The contribution of this paper is the Scope of autonomy model, which is based on the relation between learning potential, the risk of feeling overwhelmed, and the amount of choices provided in exercises. The model aim to support teachers in developing and appropriating material for teaching programming and computational thinking with individual progression in accordance with the new curriculum.}
}
@article{LYE201451,
title = {Review on teaching and learning of computational thinking through programming: What is next for K-12?},
journal = {Computers in Human Behavior},
volume = {41},
pages = {51-61},
year = {2014},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2014.09.012},
url = {https://www.sciencedirect.com/science/article/pii/S0747563214004634},
author = {Sze Yee Lye and Joyce Hwee Ling Koh},
keywords = {Programming, Scratch, Computer science education, K-12, Computational thinking},
abstract = {Programming is more than just coding, for, it exposes students to computational thinking which involves problem-solving using computer science concepts like abstraction and decomposition. Even for non-computing majors, computational thinking is applicable and useful in their daily lives. The three dimensions of computational thinking are computational concepts, computational practices and computational perspectives. In recent years, the availability of free and user-friendly programming languages has fuelled the interest of researchers and educators to explore how computational thinking can be introduced in K-12 contexts. Through an analysis of 27 available intervention studies, this paper presents the current trends of empirical research in the development of computational thinking through programming and suggests possible research and instructional implications. From the review, we propose that more K-12 intervention studies centering on computational practices and computational perspectives could be conducted in the regular classroom. To better examine these two dimensions, students could be asked to verbalize their thought process using think aloud protocol while programming and their on-screen programming activity could be captured and analyzed. Predetermined categories based on both past and recent programming studies could be used to guide the analysis of the qualitative data. As for the instructional implication, it is proposed that a constructionism-based problem-solving learning environment, with information processing, scaffolding and reflection activities, could be designed to foster computational practices and computational perspectives.}
}
@article{HARANGUS2020615,
title = {Computational Thinking in Secondary and Higher Education},
journal = {Procedia Manufacturing},
volume = {46},
pages = {615-622},
year = {2020},
note = {13th International Conference Interdisciplinarity in Engineering, INTER-ENG 2019, 3–4 October 2019, Targu Mures, Romania},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2020.03.088},
url = {https://www.sciencedirect.com/science/article/pii/S2351978920309665},
author = {Katalin Harangus and Zoltán Kátai},
keywords = {Computational thinking, Computer science education, Problem solving, Secondary and higher education, Pedagogical issues},
abstract = {One of the most important challenges of education is the formation of proper computational thinking (CT). In line with K-12 Computer Science Framework (k12cs.org) the term of CT refers to the “thought processes involved in expressing solutions as computational steps or algorithms that can be carried out by a computer”. CT is a problem solving process essential to the development of computer applications, but it is also used in supporting problem solving across many other disciplines. It has gained some grounds in secondary education in the last few years and there are ongoing efforts to introduce it to elementary education as well. Taking into consideration that algorithms play a central role in computational thinking, the aim of our research was to assess the skills of secondary school students and university students in this area, CT, that they faced an apparently computer science – free task but with obvious algorithmic background. According to the aims of our research there were two target populations: secondary school students and university students. In order to measure the level of computational thinking we elaborated a worksheet (test with problems to be solved). The tasks contained algorithms that can be applied on computer, and they did not need any IT knowledge, only structured and logical thinking. The results provide a reliable guide regarding those cognitive skills, among secondary school-children and university students, which need improvement, so transfer of knowledge could work in practical, life-like situations.}
}
@article{HUANG2024100651,
title = {Deepening children’s STEM learning through making and creative writing},
journal = {International Journal of Child-Computer Interaction},
volume = {40},
pages = {100651},
year = {2024},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2024.100651},
url = {https://www.sciencedirect.com/science/article/pii/S2212868924000199},
author = {Joey Huang and Ariel Han and Ana Villanueva and Ziyi Liu and Zhengzhe Zhu and Karthik Ramani and Kylie Peppler},
keywords = {Creative writing, STEAM learning, Internet of things (IoT), Computational thinking, Physical computing, STEAM practices},
abstract = {Current trends demonstrate that researchers and K-12 educators are moving towards integrating computational thinking (CT) concepts outside of the computer science (CS) classroom (Lee et al., 2020). However, one of the present challenges includes a lack of engaging learning content and instruction for translating computational concepts that non-CS instructors can bring into their classrooms. Our research team developed the Grove-Blockly platform, a website that employs block-based programming and physical computing elements with simulations to support CT learning and IoT practices. We designed a 5-day workshop with the National Writing Project for students to engage in STEAM learning through making and creative writing. By examining students’ learning through the processes and outcomes of making, coding, and creative writing, we aim to better understand how learning occurs at the intersections of making, writing, and computing. The findings show students’ positive learning outcomes of CT and physical computing from the workshop. Mainly, students gained a deeper understanding of IoT elements (e.g., sensors, actuators) through the process of making and creative writing. This work provides empirical evidence on how students learn CT and computational practices through making and creative writing. Finally, we discuss how the engagement of STEAM practices supports and empowers students’ learning of CT and physical computing through the creation of e-crafts by students.}
}
@article{HSU2021100012,
title = {Behavioral-pattern exploration and development of an instructional tool for young children to learn AI},
journal = {Computers and Education: Artificial Intelligence},
volume = {2},
pages = {100012},
year = {2021},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2021.100012},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X21000060},
author = {Ting-Chia Hsu and Hal Abelson and Natalie Lao and Yu-Han Tseng and Yi-Ting Lin},
keywords = {Artificial intelligence education, Interdisciplinary instructional tool, Behavioral patterns},
abstract = {This study aimed at developing an instructional tool for the artificial intelligence education of young students, and used learning analytics to identify the sequential learning behavioral patterns of students during the process of learning with the instructional tool. The instructional experiment took 9 weeks. The first stage of the course was 5 weeks spent on individual learning of MIT App Inventor and Personal Image Classifier. The second stage was 4 weeks spent on cooperative learning to make a robot car and play a computational thinking board game. In the second stage, the students worked in pairs to make the robot car. Finally, they played the computational thinking board game with the personal image classification application they developed in the first stage and the robot car they made in the second stage. The innovative studies found meaningful behavioral patterns when the young students learned the application of artificial intelligence with the instructional tool developed and proposed in the study.}
}
@article{CARDENASSAINZ2022100381,
title = {Integration and acceptance of Natural User Interfaces for interactive learning environments},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100381},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100381},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000817},
author = {Brandon Antonio Cárdenas-Sainz and María Lucia Barrón-Estrada and Ramón Zatarain-Cabada and José Mario Ríos-Félix},
keywords = {Natural user interfaces, Gesture recognition, Interactive learning environments, Computational thinking, Secondary education, Technology Acceptance Model},
abstract = {This study focuses on the design of interactive learning environments (ILE) enhanced with Natural User Interfaces (NUI) for educational applications. It presents a 3D virtual environment, namely THINKMOTION which enables students to practice computational thinking skills. THINKMOTION combines a visual programming interface for coding and creating 3D virtual scenes with physics simulations, with a gesture recognition system for interaction over virtual objects. The ILE integrates a NUI called Leap Motion Controller, which recognizes the users’ hand movements and gestures A questionnaire was designed in order to evaluate the perceptions toward experimental learning with students of public and private secondary schools. It applies Technology Acceptance Model (TAM) and enhanced with new constructs such as perceived enjoyment and interface style. Results from our study highlight that: (1) NUI technologies positively impacted enjoyment and perceived ease of use among ILE users; (2) The ease of use provided by NUIs improved the enjoyment of students; (3) The perceived enjoyment considerably increased the intention to use; (4) For public school students, NUI technology has a significant impact on their first impressions and overall interest, followed by a positive attitude toward using ILE; (5) Private school students who are more accustomed to and familiar with using natural interfaces presented a positive attitude and enjoyment when using the ILE.}
}
@article{KUCUK2020100167,
title = {Students’ attitudes towards robotics and STEM: Differences based on gender and robotics experience},
journal = {International Journal of Child-Computer Interaction},
volume = {23-24},
pages = {100167},
year = {2020},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2020.100167},
url = {https://www.sciencedirect.com/science/article/pii/S2212868920300039},
author = {Sevda Kucuk and Burak Sisman},
keywords = {Secondary education, Gender studies, Educational robotics, STEM},
abstract = {In this study, Turkish secondary school students’ attitudes towards robotics and STEM were examined in terms of gender and robotics experience. Sample consisted of 240 secondary school students (98 females and 142 males; grades 5–7). Two scales were used to collect data: STEM Attitude Scale and Robotics Attitude Scale. The data were analyzed using a One-way MANOVA and through correlational methods. Results show that the students’ attitudes towards robotics and STEM were positive. Gender had no effect on STEM attitudes. However, in terms of robotics attitudes, female students had significantly less desire and less confidence to learn robotics than male students. There was no gender effect on computational thinking and teamwork. Implications were discussed in terms of theoretical insights, practices for educational robotics in STEM, and directions for further research.}
}
@article{WOO2022101193,
title = {Problem solved, but how? An exploratory study into students’ problem solving processes in creative coding tasks},
journal = {Thinking Skills and Creativity},
volume = {46},
pages = {101193},
year = {2022},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2022.101193},
url = {https://www.sciencedirect.com/science/article/pii/S1871187122001948},
author = {Karen Woo and Garry Falloon},
keywords = {Problem solving, Computational thinking, Tinkering, Coding, Middle-school},
abstract = {Problem solving capabilities have often been reported by teachers as a key benefit from creative coding activities in school-age children. However, few studies to date have defined problem solving, and investigated how it is operationalised in interdisciplinary creative coding tasks. This study aims to build knowledge about students’ use of computational thinking and computer science concepts for problem solving when coding animated narratives. The research investigated students’ coding processes using data gathered from audio and device display recordings and semi-structured interviews. Results suggest limitations to the use of creative coding tasks if the expectation is to develop computational thinking and systematic problem solving strategies, or learn basic computer science concepts. They revealed that novice students rarely solved coding problems using optimal technically-based strategies despite being given explicit instruction on their use, opting instead to bypass problems by adjusting intended outcomes, or by using low level code translation strategies. Results demonstrate that engaging computational thinking or even demonstrating understanding of basic computer science concepts was not a requirement to produce a viable creative coding outcome. This study contributes new understanding of students’ coding practices when engaged in creative coding tasks in regular, non-specialist classrooms. Its findings challenge the commonly-held assumption that coding is a natural ‘vehicle’ to develop computational thinking and systematic approaches to problem solving. It also questions the learning that results from the non-technical, inefficient and often ineffective problem solving practices students employ during ‘creative coding’ tasks, that are frequently used by non-specialist teachers in response to curriculum requirements.}
}
@article{KAZIMOGLU20121991,
title = {A Serious Game for Developing Computational Thinking and Learning Introductory Computer Programming},
journal = {Procedia - Social and Behavioral Sciences},
volume = {47},
pages = {1991-1999},
year = {2012},
note = {Cyprus International Conference on Educational Research (CY-ICER-2012)North Cyprus, US08-10 February, 2012},
issn = {1877-0428},
doi = {https://doi.org/10.1016/j.sbspro.2012.06.938},
url = {https://www.sciencedirect.com/science/article/pii/S1877042812026742},
author = {Cagin Kazimoglu and Mary Kiernan and Liz Bacon and Lachlan Mackinnon},
keywords = {Serious games, game based learning, computational thinking, introductory programming, learning programming with games},
abstract = {Owing to their ease of engagement and motivational nature, especially for younger age groups, games have been omnipresent in education since earliest times. More recently, computer video games have become widely used, particularly in secondary and tertiary education, to impart core knowledge in some subject areas and as an aid to attracting and retaining students. Academics have proposed a number of approaches, using games-based learning (GBL), to impart theoretical and applied knowledge, especially in the computer science discipline. Our research is concerned with the design of an innovative educational game framework focused on the development of Computational Thinking (CT) skills, and herein we introduce a serious game, based on our framework, which encourages the development of CT skills to facilitate learning introductory computer programming. We describe how a limited number of key introductory computer programming concepts have been mapped onto the game-play, and how an equivalent set of skills characterising CT can be acquired through playing the game. A survey response group of 25 students, following computer science and related degree programmes but with very diverse backgrounds and experience, provided initial usability feedback on the game. Their feedback confirmed that they found the game enjoyable, and also universally believed that this approach would be beneficial in helping students learn problem-solving skills for introductory computer programming. Feedback from this group will be incorporated in a revised version of the game, which will now be subject to rigorous experimental evaluation and analysis, to provide structured empirical evidence in support of our approach.}
}
@article{CETIN201770,
title = {Reflective abstraction in computational thinking},
journal = {The Journal of Mathematical Behavior},
volume = {47},
pages = {70-80},
year = {2017},
issn = {0732-3123},
doi = {https://doi.org/10.1016/j.jmathb.2017.06.004},
url = {https://www.sciencedirect.com/science/article/pii/S0732312316301511},
author = {Ibrahim Cetin and Ed Dubinsky},
keywords = {Computational thinking, Mental structures, Mental mechanism, Reflective abstraction, Essence, APOS theory},
abstract = {Computational thinking has become an increasingly popular notion in K-12 and college level education. Although researchers have accepted that abstraction is a central concept in computational thinking, they are quick to disagree on the meaning of it. A focus on reflective abstraction has led to the development of APOS Theory in Mathematics education. This has resulted in many cases of improved student learning in Mathematics (Arnon et al., 2013). Our main aim in this paper is to construct a theoretical bridge between computational thinking and APOS Theory and show that reflective abstraction can be used in the context of computational thinking.}
}
@article{OUYANG2023104721,
title = {Effect of augmented reality-based virtual educational robotics on programming students’ enjoyment of learning, computational thinking skills, and academic achievement},
journal = {Computers & Education},
volume = {195},
pages = {104721},
year = {2023},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104721},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522002925},
author = {Fang-Chuan {Ou Yang} and Hui-Min Lai and Yen-Wen Wang},
keywords = {Augmented and virtual reality, Improving classroom teaching, Teaching strategies, Learning strategies},
abstract = {The use of educational robotics for programming education has been shown to be effective in fostering students’ computational thinking (CT) skills. However, physical educational robots are expensive, which may limit their wide use in the classroom. This study used augmented reality technology to develop a virtual educational robotic system (AR Bot for short), which offers 3D visual learning feedback to strengthen spatial ability, as well as delayed feedback and auto-scoring feedback to promote students’ deeper CT processes. To examine the impact of AR Bot on programming learning, this study used a quasi-experimental design to compare an experimental group of 41 first-year university students who used AR Bot and a control group of 34 first-year university students who used Scratch. We assessed the impact of the two CT tools on students’ internal learning processes (enjoyment of learning), CT skills (problem decomposition, algorithm design, and algorithm efficiency skills), and academic achievement. The results showed that students who used AR Bot had higher enjoyment of learning, algorithm design skills, and algorithm efficiency skills but not higher problem decomposition skills and academic achievement than students who used Scratch. Enjoyment of learning led to higher problem decomposition, algorithm design, and algorithm efficiency skills but not academic achievement. Problem decomposition and algorithm design skills, but not algorithm efficiency skills, led to academic achievement. The theoretical and practical implications of the proposed tool and other CT tools in programming education are discussed.}
}
@article{LEE201426,
title = {CTArcade: Computational thinking with games in school age children},
journal = {International Journal of Child-Computer Interaction},
volume = {2},
number = {1},
pages = {26-33},
year = {2014},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2014.06.003},
url = {https://www.sciencedirect.com/science/article/pii/S2212868914000208},
author = {Tak Yeon Lee and Matthew Louis Mauriello and June Ahn and Benjamin B. Bederson},
keywords = {Computational thinking, Learning, Games, Human factors, Design},
abstract = {We believe that children as young as ten can directly benefit from opportunities to engage in computational thinking. One approach to provide these opportunities is to focus on social game play. Understanding game play is common across a range of media and ages. Children can begin by solving puzzles on paper, continue on game boards, and ultimately complete their solutions on computers. Through this process, learners can be guided through increasingly complex algorithmic thinking activities that are built from their tacit knowledge and excitement about game play. This paper describes our approach to teaching computational thinking skills without traditional programming—but instead by building on children’s existing game playing interest and skills. We built a system called CTArcade, with an initial game (Tic-Tac-Toe), which we evaluated with 18 children aged 10–15. The study shows that our particular approach helped young children to better articulate algorithmic thinking patterns, which were tacitly present when they played naturally on paper, but not explicitly apparent to them until they used the CTArcade interface.}
}
@article{BARATE20171334,
title = {Fostering Computational Thinking in Primary School through a LEGO®-based Music Notation},
journal = {Procedia Computer Science},
volume = {112},
pages = {1334-1344},
year = {2017},
note = {Knowledge-Based and Intelligent Information & Engineering Systems: Proceedings of the 21st International Conference, KES-20176-8 September 2017, Marseille, France},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2017.08.018},
url = {https://www.sciencedirect.com/science/article/pii/S1877050917313571},
author = {Adriano Baratè and Luca A. Ludovico and Dario Malchiodi},
keywords = {Music, Education, Visual Programming},
abstract = {This paper presents a teaching methodology mixing elements from the domains of music and informatics as a key enabling to expose primary school pupils to basic aspects of computational thinking. This methodology is organized in two phases exploiting LEGO® bricks respectively as a physical tool and as a metaphor in order to let participants discover a simple notation encoding several basic concepts of the classical musical notation. The related activities, grounded on active learning theory, challenge groups of students to solve musical encoding problems of increasing difficulty.}
}
@article{SHIFLET20121753,
title = {Introducing Life Science Doctoral Students in Oz to the Wizardry of Computational Modeling: Introducing Computational Thinking with CellDesigner™},
journal = {Procedia Computer Science},
volume = {9},
pages = {1753-1762},
year = {2012},
note = {Proceedings of the International Conference on Computational Science, ICCS 2012},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.04.193},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912003146},
author = {George W. Shiflet and Angela B. Shifleta},
keywords = {workshop, CellDesigner™, computational thinking, modeling, system dynamics, regulatory networks},
abstract = {A five-day, hands-on workshop was held at Monash University to introduce doctoral students in the life sciences to computational applications for research. Although three software tools were employed (CellDesigner™, MATLAB™ including the Parallel Computing Toolbox, and Nimrod), this paper reports on the use of CellDesigner in teaching computational thinking and modeling, including system dynamics and regulatory networks. Each session included a series of brief orientations to the tool, followed with illustrative, practical projects for participants to implement. From written evaluations and various forms of anecdotal evidence (e.g., oral communications, participation, project/assignment performance), we conclude CellDesigner to be a suitable tool for use in such a workshop.}
}
@article{BASOGAIN2018412,
title = {Computational Thinking in pre-university Blended Learning classrooms},
journal = {Computers in Human Behavior},
volume = {80},
pages = {412-419},
year = {2018},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2017.04.058},
url = {https://www.sciencedirect.com/science/article/pii/S0747563217303011},
author = {Xabier Basogain and Miguel Ángel Olabe and Juan Carlos Olabe and Mauricio Javier Rico},
keywords = {Computational Thinking, Cognitive science, Learning technologies, Scratch, Alice, Educational technology},
abstract = {This article describes the implementation of various core elements of Computational Thinking (CT) in the classrooms of schools of Latin America and USA in two specific courses: PC-01 and ECE130. These courses were designed for students of primary and secondary education, as well as for students of high school as part of a dual enrollment program with a local university. Both courses introduce the core concepts and processes of CT aided by the visual programming environments Scratch and Alice. The courses are facilitated by the classroom teacher with the support of a learning platform. This platform is configured to provide innovative pedagogical strategies based on emerging educational technologies. This article describes the concepts integrated under the term CT, and discusses the benefits of learning environments used to incorporate CT in the classroom. It describes as well the syllabi and assessments of both courses, and analyzes their impact of these courses on the educational institutions, the teachers and the students.}
}
@incollection{HWU2023433,
title = {Chapter 19 - Parallel programming and computational thinking},
editor = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}},
booktitle = {Programming Massively Parallel Processors (Fourth Edition)},
publisher = {Morgan Kaufmann},
edition = {Fourth Edition},
pages = {433-446},
year = {2023},
isbn = {978-0-323-91231-0},
doi = {https://doi.org/10.1016/B978-0-323-91231-0.00002-1},
url = {https://www.sciencedirect.com/science/article/pii/B9780323912310000021},
author = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}},
keywords = {Strong scaling, weak scaling, Amdahl’s law, algorithm selection, algorithmic complexity, problem decomposition, output-centric decomposition, input-centric decomposition, gather, scatter, approximation},
abstract = {This chapter introduces the concept of computational thinking. It first reviews the main goals of parallel programming. It then discusses the thinking process of algorithm selection and problem decomposition. For a given problem the programmer will typically have to select from a variety of algorithms. Some of these algorithms achieve different tradeoffs while maintaining the same numerical accuracy. Others involve sacrificing some level of accuracy to achieve much more scalable running times. For the selected algorithm, different choices of problem decomposition can result in different levels of interference between threads, parallelism exposed, load imbalance, and other performance considerations during parallel execution. Computational thinking skills allow an algorithm designer to work around the roadblocks and reach a good solution.}
}
@article{SUN2021100926,
title = {Improving 7th-graders’ computational thinking skills through unplugged programming activities: A study on the influence of multiple factors},
journal = {Thinking Skills and Creativity},
volume = {42},
pages = {100926},
year = {2021},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2021.100926},
url = {https://www.sciencedirect.com/science/article/pii/S1871187121001413},
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
keywords = {Computational thinking, Unplugged programming, Influencing factors, Students, Junior high school},
abstract = {Programming is an important way to cultivate students’ computational thinking (CT) skills, which is the essential ability of students in the 21st century. As one of the mainstream forms of programming education activities, unplugged programming activities are mainly implemented in the early stage of basic education. However, considering the lack of programming experience among Chinese junior high schoolers and the uneven distribution of programming education resources, an 8-week quasi-experimental study was conducted to verify the effectiveness of unplugged activities in improving junior high schoolers’ CT skills, and to identify the influence of multiple factors. A total of 93 7th-graders volunteered to participate in the experiment: 62 students were divided into two experimental groups, which were intervened by unplugged activities to repeat the results’ reliability, and 31 students were used as the control group without any unplugged programming activities. The results of the intra-group and inter-group comparison show that unplugged programming is a more effective way to improve 7th-graders’ CT skills. Students’ mathematic performance and previous programming experience had a significant impact on their CT skills, but this impact is not reflected in the process of unplugged programming activities. It can be said that all students can develop their CT skills through unplugged programming activities, regardless of their learning background. In the current context, unplugged programming activities can be used as an effective way for junior high schoolers to improve and develop their CT skills. In addition, this paper also discusses the enlightenment to improve students’ CT skills.}
}
@article{CHAN2021e07922,
title = {Learning number patterns through computational thinking activities: A Rasch model analysis},
journal = {Heliyon},
volume = {7},
number = {9},
pages = {e07922},
year = {2021},
issn = {2405-8440},
doi = {https://doi.org/10.1016/j.heliyon.2021.e07922},
url = {https://www.sciencedirect.com/science/article/pii/S2405844021020259},
author = {Shiau-Wei Chan and Chee-Kit Looi and Weng Kin Ho and Wendy Huang and Peter Seow and Longkai Wu},
keywords = {Number patterns, Computational thinking, Rasch model, Quasi-experiment, Mathematics education},
abstract = {Despite the increasing presence of computational thinking (CT) in the mathematics context, the connection between CT and mathematics in a practical classroom context is an important area for further research. This study intends to investigate the impact of CT activities in the topic of number patterns on the learning performance of secondary students in Singapore. The Rasch model analysis was employed to assess differences of ability between students from the experimental group and control group. 106 Secondary One students (age 13 years old) from a secondary school in Singapore took part in this study. A quasi-experimental non-equivalent groups design was utilized where 70 students were assigned into the experimental group, and 36 students were assigned into the control group. The experimental group was given intervention with CT-infused activities both on- and off-computer, while the control group received no such intervention. Both groups were administered the pretest before the intervention and the posttest after the intervention. The data gathered were analyzed using the partial credit version of the Rasch model. Analysis of pretest and posttest results revealed that the performance of the experimental group was similar to the control group. The findings did not support the hypothesis that integrating CT in lessons can result in improved mathematics learning. However, the drastic improvement was observed in individual students from the experimental group, while there is no obvious or extreme improvement for the students from the control group. This study provides some new empirical evidence and practical contributions to the infusion of CT practices in the mathematics classroom.}
}
@article{RELKIN2021104222,
title = {Learning to code and the acquisition of computational thinking by young children},
journal = {Computers & Education},
volume = {169},
pages = {104222},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104222},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521000993},
author = {E. Relkin and L.E. {de Ruiter} and M.U. Bers},
keywords = {Computational thinking, Coding, Early childhood education, Unplugged assessment, Curriculum},
abstract = {This longitudinal study examined changes in Computational Thinking (CT) skills in first and second grade students exposed to a developmentally appropriate coding curriculum. The “Coding as Another Language” (CAL) curriculum spans seven weeks and uses the KIBO robot to engage students in learning that integrates programming and literacy concepts. We compared children receiving CAL (N = 667) to a control group (N = 181) who participated in typical classroom activities without coding (No-CAL). TechCheck, a validated “unplugged” CT assessment suitable for young children regardless of their coding experience, was used to measure CT. Over the course of the study, children who received CAL-KIBO improved on TechCheck (Mchange = 0.94, p < .001) whereas the No-CAL group did not change significantly (Mchange = 0.27, p = .07). Accounting for demographic factors, baseline performance and classroom (teacher) effects, CAL exposure was a significant predictor of post-test CT scores (p < .01). Improvements in CT measured by TechCheck over seven weeks of the CAL-KIBO curriculum were consistent with approximately six months of development without coding instruction. Secondary analysis stratified by grade revealed decisive evidence that CAL exposure improved scores in first grade and anecdotal evidence that second grade scores improved. The CT domains that showed improvement in children who received CAL-KIBO included algorithms, modularity, and representation. Young children who learned to code improved in solving unplugged problems that were not explicitly taught in the coding curriculum. This provides evidence that a developmentally appropriate curriculum for teaching young children to code can accelerate their acquisition of CT skills.}
}
@article{KONG2020106230,
title = {Formation of computational identity through computational thinking perspectives development in programming learning: A mediation analysis among primary school students},
journal = {Computers in Human Behavior},
volume = {106},
pages = {106230},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.106230},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219304492},
author = {Siu Cheung Kong and Yi Qing Wang},
keywords = {Computational identity, Computational thinking perspectives, Identity formation, Programming education, Situated learning theory, Structural equation modeling},
abstract = {This study aimed at investigating whether Computational Thinking (CT) Perspectives can foster Computational Identity (CI) among primary school students in programming learning from the perspective of situated learning theory. This study conceptualized CT perspectives as a multidimensional construct that comprises (1) ability to connect, (2) ability to question, and (3) ability to express, and CI with four subcomponents including (1) programming affiliation, (2) programming engagement, (3) programming actualization, and (4) programming goal setting. Students who received at least 6-month programming training for computational thinking development were invited to participate in this study. Results of Confirmatory Factor Analysis (CFA) suggested that the CT perspectives instrument (n = 100) and CI instrument (n = 241) reached good fit and therefore were validated in the pilot study. In the main study, survey answers (N = 215) including CT perspectives and CI were collected. Results of Structural Equation Modeling (SEM) showed positive relationships between CT perspectives and CI formation among primary school students. Mediation results further revealed that ability to question can foster CI formation through ability to express, while ability to connect can directly foster CI formation. Implications were discussed at the end of the study.}
}
@article{STUPURIENE2024104939,
title = {Teachers’ perceptions of the barriers and drivers for the integration of Informatics in primary education},
journal = {Computers & Education},
volume = {208},
pages = {104939},
year = {2024},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2023.104939},
url = {https://www.sciencedirect.com/science/article/pii/S0360131523002166},
author = {Gabrielė Stupurienė and Margarida Lucas and Pedro Bem-Haja},
keywords = {Primary education, Teacher professional development, Thematic analysis, Network analysis, Informatics education},
abstract = {A growing trend of integrating and teaching Informatics and Computational Thinking (CT) skills at primary education levels poses different challenges for teachers. Research demonstrates that it is challenging to introduce Informatics in schools without well-prepared teachers. In this paper, we examine Lithuanian teachers' perceptions of the barriers and drivers to integrate the renewed Informatics curricula in primary education and the relation between them. Fifteen semi-structured interviews were conducted with primary school teachers, and a mixed-methods approach was employed to analyze them. The results show that explicit guidelines for renewed curricula and motivation to learn Informatics are both identified as the main barriers and drivers for integrating Informatics. The study further highlights the critical role of resources, appropriate tools, and guidelines in facilitating the successful implementation of Informatics. The study provides knowledge that could, for instance, benefit teacher training programmes and help better understand how teachers can be better supported to meet current and future challenges.}
}
@article{KONG2018178,
title = {A study of primary school students' interest, collaboration attitude, and programming empowerment in computational thinking education},
journal = {Computers & Education},
volume = {127},
pages = {178-189},
year = {2018},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2018.08.026},
url = {https://www.sciencedirect.com/science/article/pii/S0360131518302367},
author = {Siu-Cheung Kong and Ming Ming Chiu and Ming Lai},
keywords = {Collaboration attitude, Computational thinking education, Programming empowerment, Student interest, Self-efficacy},
abstract = {Building on Seymour Papert's view of empowering students by mastering programming, this study conceptualized programming empowerment as consisting of four components: meaningfulness, impact, creative self-efficacy, and programming self-efficacy. A sample of 287 primary school students in grades four to six completed a corresponding survey. Confirmatory factor analysis validated the proposed components of the programming empowerment instrument. A structural equation model indicated that students with greater interest in programming perceived it as more meaningful, had greater impact, had greater creative self-efficacy, and had greater programming self-efficacy. Also, students with attitudes toward collaboration that were more positive than others had greater creative self-efficacy. Boys showed more interest in programming than girls did. Students in higher grade levels than others viewed programming as less meaningful and had lower programming self-efficacy. These results support future studies that evaluate the impacts of interest-driven computational thinking and programming curricula with ample collaboration opportunities.}
}
@article{SALEEM2024100124,
title = {Understanding 21st century skills needed in response to industry 4.0: Exploring scholarly insights using bibliometric analysis},
journal = {Telematics and Informatics Reports},
volume = {13},
pages = {100124},
year = {2024},
issn = {2772-5030},
doi = {https://doi.org/10.1016/j.teler.2024.100124},
url = {https://www.sciencedirect.com/science/article/pii/S2772503024000100},
author = {Sumayya Saleem and Elizabeth Dhuey and Linda White and Michal Perlman},
keywords = {21st century skills, Industry 4.0, Bibliometric analysis, Co-citation, Bibliographic coupling},
abstract = {International policy agendas are increasingly focusing on the 21st century skills needed by future workers in response to Industry 4.0. In this study, we conduct a bibliometric analysis of 2662 articles published by 6579 authors in the last two decades to understand the structure of the scholarly knowledge in this field. We first identify influential articles, documents, journals and trends in this literature. We use co-citation analysis to identify foundational themes in the development of 21st century skills literature, then using bibliometric coupling, we identify communities in the current research front. We then use co-word analysis to identify future directions in the field. Overall, we find that research on 21st century skills has grown exponentially in the past two decades, however, few researchers focus primarily on this topic. The existing research is primarily dominated by psychologists, education researchers and technology researchers. We also find that specific disciplines such as industrial engineering and nursing are prominent contributors in the field, and that critical thinking and computational thinking are key areas of focus.}
}
@article{VOURLETSIS2022100069,
title = {Exploring the effect of remixing stories and games on the development of students' computational thinking},
journal = {Computers and Education Open},
volume = {3},
pages = {100069},
year = {2022},
issn = {2666-5573},
doi = {https://doi.org/10.1016/j.caeo.2021.100069},
url = {https://www.sciencedirect.com/science/article/pii/S2666557321000409},
author = {Ioannis Vourletsis and Panagiotis Politis},
keywords = {Elementary education, Games, Learning communities, 21st century abilities},
abstract = {Computational thinking (CT) is broadly recognised as a set of problem-solving methods that involve expressing problems and their solutions in ways that enable their computer-mediated representation across a variety of fields. Nowadays, it is argued that CT needs to be expanded towards new pathways that establish a less individualistic and more social CT. One of these pathways consists of modifying and sharing versions of projects that other members of the community have created, but few researchers have investigated how it might be applied to primary school pupils. In this study we aimed to address the effect of a CT course on (a) primary school students’ reusing and remixing proficiency level and (b) the CT concepts they modify while they engage in reusing and remixing Scratch projects. Forty pairs of participants worked with Scratch, a block-based visual programming language, remixing projects related to stories and games. Data collection involved semi-structured interviews, a rubric, and an online analytical tool, Dr. Scratch. The results of the analysis suggest that our instructional intervention, and especially game remixing activities, can improve students’ reusing and remixing proficiency; however, students modify different CT concepts when they remix stories and games.}
}
@article{ROMANGONZALEZ2018441,
title = {Extending the nomological network of computational thinking with non-cognitive factors},
journal = {Computers in Human Behavior},
volume = {80},
pages = {441-459},
year = {2018},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2017.09.030},
url = {https://www.sciencedirect.com/science/article/pii/S0747563217305563},
author = {Marcos Román-González and Juan-Carlos Pérez-González and Jesús Moreno-León and Gregorio Robles},
keywords = {Computational thinking, Computational thinking test, Code literacy, Computer science education, Personality, Self-efficacy, Educational psychology, Primary education, Secondary education},
abstract = {Computational thinking (CT) is being consolidated as a key set of problem-solving skills that must be developed by the students to excel in our software-driven society. However, in psychological terms, CT is still a poorly defined construct, given that its nomological network has not been established yet. In a previous paper, we started to address this issue studying the correlations between CT and some fundamental cognitive variables, such as primary mental abilities and problem-solving ability. The current work deepens in the same direction as it aims to extend the nomological network of CT with non-cognitive factors, through the study of the correlations between CT, self-efficacy and the several dimensions from the ‘Big Five’ model of human personality: Openness to Experience, Conscientiousness, Extraversion, Agreeableness, and Neuroticism. To do so, the Computational Thinking Test (CTt) and some additional self-efficacy items are administered on a sample of 1251 Spanish students from 5th to 10th grade (N = 1251), and the Big Five Questionnaire-Children version (BFQ-C) is also taken by a subsample from the above (n = 99). Results show statistically significant correlations between CT and self-efficacy perception relative to CT performance (rs = 0.41), in which gender differences in favor of males are found (d = 0.42). Moreover, results show statistically significant correlations between CT and: Openness to Experience (r = 0.41), Extraversion (r = 0.30), and Conscientiousness (r = 0.27). These findings are consistent with the existing literature except for the unexpected correlation between CT and the Extraversion factor of personality, which is consequently discussed in detail. Overall, our findings corroborate the existence of a non-cognitive side of CT that should be taken into account by educational policies and interventions aimed at fostering CT. As a final contribution, the extended nomological network of CT integrating cognitive and non-cognitive variables is depicted.}
}
@article{SJODAHL2023100573,
title = {Abstracting and decomposing in a visual programming environment},
journal = {International Journal of Child-Computer Interaction},
volume = {36},
pages = {100573},
year = {2023},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2023.100573},
url = {https://www.sciencedirect.com/science/article/pii/S2212868923000107},
author = {Anna Sjödahl and Andreas Eckert},
keywords = {21st century abilities, Computational thinking, Abstraction, Decomposition, Elementary education},
abstract = {A growing body of research concerned with computational thinking (CT) has emerged the last couple of years, but there is still a lack of consensus about the definition of CT. There are also gaps in the understanding of how young children manifest CT. With this paper, we contribute to the field by taking an action perspective with the CT of K-3 students. The analysis focus on iterative acts of abstraction and decomposition as a core process that elicits development of CT. We call these iterative acts the Abstraction/Decomposition spiral (AD spiral). By illustrating the AD spiral through the actions of two first grade students, the analysis shows how visual representation of an emerging solution, and the development of a plan are two important elements when young students solve problems in a coding context, developing their CT.}
}
@article{HOWLAND201993,
title = {Editorial — Special Issue on Computational Thinking and Coding in Childhood},
journal = {International Journal of Child-Computer Interaction},
volume = {19},
pages = {93-95},
year = {2019},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2018.11.001},
url = {https://www.sciencedirect.com/science/article/pii/S2212868918301193},
author = {Kate Howland and Judith Good and Judy Robertson and Andrew Manches}
}
@article{LECORCHICK2020655,
title = {Problem Solving Archetype - Computer Science},
journal = {Procedia Computer Science},
volume = {172},
pages = {655-659},
year = {2020},
note = {9th World Engineering Education Forum (WEEF 2019) Proceedings : Disruptive Engineering Education for Sustainable Development},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2020.05.085},
url = {https://www.sciencedirect.com/science/article/pii/S1877050920314149},
author = {Douglas Lecorchick and Scott Nichols and Lauren Tabor},
keywords = {problem formulation, computational thinking, problem solving archetype},
abstract = {Problems that are carefully formulated lead students to develop more sufficient and realistic solutions. By front-loading the process of problem solving through problem formulation, students are able to reduce the amount of time spent on solution development, and thus increase their efficiency towards meeting their main objective. By teaching students problem formulation, especially in computer science related activities, foundational skills in computational thinking are introduced, used, and refined. Using a problem solving archetype as a means for this formulation is an effective tool for students to leverage. As computational thinking skills are honed, these concepts can translate across barriers into other content areas.}
}
@article{CHEN2017162,
title = {Assessing elementary students’ computational thinking in everyday reasoning and robotics programming},
journal = {Computers & Education},
volume = {109},
pages = {162-175},
year = {2017},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2017.03.001},
url = {https://www.sciencedirect.com/science/article/pii/S0360131517300490},
author = {Guanhua Chen and Ji Shen and Lauren Barth-Cohen and Shiyan Jiang and Xiaoting Huang and Moataz Eltoukhy},
keywords = {Computational thinking, Robotics education, Evaluation methodologies, Programming and programming languages},
abstract = {Based on a framework of computational thinking (CT) adapted from Computer Science Teacher Association's standards, an instrument was developed to assess fifth grade students' CT. The items were contextualized in two types of CT application (coding in robotics and reasoning of everyday events). The instrument was administered as a pre and post measure in an elementary school where a new humanoid robotics curriculum was adopted by their fifth grade. Results show that the instrument has good psychometric properties and has the potential to reveal student learning challenges and growth in terms of CT.}
}
@article{POLLAROLO2024100637,
title = {Play with Coding Toys in Early Childhood Education and Care: Teachers’ Pedagogical Strategies, Views and Impact on Children's Development. A Systematic Literature Review},
journal = {Entertainment Computing},
volume = {50},
pages = {100637},
year = {2024},
issn = {1875-9521},
doi = {https://doi.org/10.1016/j.entcom.2024.100637},
url = {https://www.sciencedirect.com/science/article/pii/S1875952124000053},
author = {Enrico Pollarolo and Sofia Papavlasopoulou and Francesca Granone and Elin Reikerås},
keywords = {Coding toys, Communication skills, Computational thinking, Early childhood education and care, Teachers’ pedagogical strategies, Problem-solving},
abstract = {This paper presents a systematic literature review that aims to portray an overview of pedagogical strategies that Early Childhood Education and Care (ECEC) teachers adopt to support children’s play with coding toys. In addition, the article synthesizes findings about teachers’ views in relation to the use of coding toys in ECEC and describes the outputs that the existing literature identifies as children’s development after play activities with coding toys. The systematic literature search was performed in accordance with the PRISMA-2020 statement, and the initial search across four databases (Eric, Scopus, Web of Science, and Academic Research Ultimate) for papers published between January 2010 and May 2022 yielded 2672 peer-reviewed articles. Following the first evaluation, the application of the inclusion and exclusion criteria resulted in a shortlist of 22 papers. The results show different strategies that the teachers can use during play activities with coding toys, assuming the roles of facilitators and mediators through collaborative work, allowing children to try and fail. Moreover, the results revealed that ECEC teachers largely hold positive and constructive attitudes towards the use of coding toys. Findings also highlight positive outcomes regarding children’s development across various cognitive and socio-emotional skills such as problem solving, computational thinking and communication. As an improvement, future studies should focus on identifying appropriate pedagogies that may be applied in tandem with the technology to maximise the pedagogical benefits for the children as well as adequate training for teachers.}
}
@article{ATMATZIDOU2016661,
title = {Advancing students’ computational thinking skills through educational robotics: A study on age and gender relevant differences},
journal = {Robotics and Autonomous Systems},
volume = {75},
pages = {661-670},
year = {2016},
issn = {0921-8890},
doi = {https://doi.org/10.1016/j.robot.2015.10.008},
url = {https://www.sciencedirect.com/science/article/pii/S0921889015002420},
author = {Soumela Atmatzidou and Stavros Demetriadis},
keywords = {Computational thinking, Educational robotics, Secondary education, Skill development},
abstract = {This work investigates the development of students’ computational thinking (CT) skills in the context of educational robotics (ER) learning activity. The study employs an appropriate CT model for operationalising and exploring students’ CT skills development in two different age groups (15 and 18 years old) and across gender. 164 students of different education levels (Junior high: 89; High vocational: 75) engaged in ER learning activities (2 hours per week, 11 weeks totally) and their CT skills were evaluated at different phases during the activity, using different modality (written and oral) assessment tools. The results suggest that: (a) students reach eventually the same level of CT skills development independent of their age and gender, (b) CT skills in most cases need time to fully develop (students’ scores improve significantly towards the end of the activity), (c) age and gender relevant differences appear when analysing students’ score in the various specific dimensions of the CT skills model, (d) the modality of the skill assessment instrument may have an impact on students’ performance, (e) girls appear in many situations to need more training time to reach the same skill level compared to boys.}
}
@article{KONG2020103872,
title = {Teacher development in computational thinking: Design and learning outcomes of programming concepts, practices and pedagogy},
journal = {Computers & Education},
volume = {151},
pages = {103872},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.103872},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520300713},
author = {Siu-Cheung Kong and Ming Lai and Daner Sun},
keywords = {Computational thinking, CT concepts, CT practices, Teacher development, TPACK},
abstract = {The implementation of effective professional development courses for K-12 teachers on computational thinking (CT) in relation to programming remains a challenge. There is a lack of high-quality empirical research on teacher development in CT in relation to programming. This study addressed that situation by providing empirical evidence of the design and evaluation of such a teacher development program in primary schools. Seventy-six in-service teachers participated in a program comprising two 39-h courses. One course focused on the fundamental subject knowledge of programming for CT development together with pedagogy. The other focused on the development of advanced knowledge while providing opportunities to practice teaching in the classroom and to reflect on the practice. The results indicate that the participants developed a better understanding of CT concepts and practices and improved in three of the four content knowledge related dimensions of technological pedagogical content knowledge (TPACK) across the two courses. The three dimensions were content knowledge of programming for CT development, technological content knowledge of the use of block-based programming environments for programming for CT development, and use of the environment to teach programming for CT development with the appropriate pedagogy in context. Analysis of the participants' self-reported reflections suggested that the two courses and the teaching experience acquired during the prolonged second course were the two main sources of improvement. This study demonstrates the importance of providing an effective teacher development program with a focus on CT concepts and practices. The program offers teachers a sustained period in which to practice in the classroom and reflect on their teaching while developing their capacity to implement CT in relation to programming.}
}
@article{KASPERSEN2021100302,
title = {Towards a model of progression in computational empowerment in education},
journal = {International Journal of Child-Computer Interaction},
volume = {29},
pages = {100302},
year = {2021},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100302},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000325},
author = {Magnus Høholt Kaspersen and Daniel Graungaard and Niels Olof Bouvin and Marianne Graves Petersen and Eva Eriksson},
keywords = {Computational thinking, Computational empowerment, Education},
abstract = {In this paper, we present a model for progression in computational empowerment in education. Computational empowerment (CE) expands computational thinking (CT) by adding a focus on empowering citizens to critically engage with technology, but currently lacks an articulation of what characterises progression towards CE. Through combining aims from computational thinking with computational empowerment, and structure progression using the SOLO taxonomy, we take the first steps towards a model for understanding and articulating progression in computational empowerment. The model has been applied in the analysis of four CE-focused research projects. Based on the analysis, we propose that computational empowerment is a matter of reaching a high competency level regarding computational concepts, computational practices and reflexivity regarding the effect of technology in one’s own life and in society. Finally, by formulating examples of learning goals, we illustrate how the model can be used by teachers and researchers to articulate, determine and compare CE learning goals, so that learning goals are aligned and complement each other from one stage to the next.}
}
@article{WEI2021104023,
title = {The effectiveness of partial pair programming on elementary school students’ Computational Thinking skills and self-efficacy},
journal = {Computers & Education},
volume = {160},
pages = {104023},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.104023},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520302219},
author = {Xuefeng Wei and Lin Lin and Nanxi Meng and Wei Tan and Siu-Cheung Kong and  Kinshuk},
keywords = {Elementary education, Classroom teaching, Computational thinking, Partial pair programming, Self-efficacy, Pair collaborative learning},
abstract = {Computational thinking (CT) skills are becoming essential in all aspects of work and life, and CT has become part of the K-12 curriculum around the world. Yet, more research is needed to better understand how to help elementary school students acquire CT skills effectively. The purpose of this study was to examine the effectiveness of partial pair programming (PPP) on elementary school students' CT skills and self-efficacy (SE). The study included four 4th grade classes, with a total of 171 students, who were taking the course entitled “Computational Thinking with Scratch” with the same teacher for one semester. Two classes (84 students) were in the Experimental Group (EG, 44 boys and 40 girls) while two other classes (87 students) were in the Control Group (CG, 45 boys and 42 girls). The students in the EG were paired up for the programming assignments while the students in the CG did the assignments on their own. The results showed that the students in the EG improved their CT skills and SE more significantly than those in the CG group. There was a low correlation between CT and SE in the post-test of both groups. The interviews with the teacher and the students afterwards provided insights in understanding the results. The findings suggest that in K-12 programming teachers could use PPP as an effective approach to improve students’ CT skills, programming SE, and beyond.}
}
@article{CESAR2017116,
title = {Introducing computational thinking, parallel programming and performance engineering in interdisciplinary studies},
journal = {Journal of Parallel and Distributed Computing},
volume = {105},
pages = {116-126},
year = {2017},
note = {Keeping up with Technology: Teaching Parallel, Distributed and High-Performance Computing},
issn = {0743-7315},
doi = {https://doi.org/10.1016/j.jpdc.2016.12.027},
url = {https://www.sciencedirect.com/science/article/pii/S0743731517300059},
author = {Eduardo Cesar and Ana Cortés and Antonio Espinosa and Tomàs Margalef and Juan Carlos Moure and Anna Sikora and Remo Suppi},
keywords = {Parallel programming, Message passing, Shared memory, GPUs, MPI, OpenMP, CUDA, Agent-based models, Model simulation},
abstract = {Nowadays, many fields of science and engineering are evolving through the joint contribution of complementary fields. Computer science, and especially High Performance Computing, has become a key factor in the development of many research fields, establishing a new paradigm called computational science. Researchers and professionals from many different fields require knowledge of High Performance Computing, including parallel programming, to develop fruitful and efficient work in their particular field. Therefore, at Universitat Autònoma of Barcelona (Spain), an interdisciplinary Master on “Modeling for Science and Engineering” was started 5 years ago to provide a thorough knowledge of the application of modeling and simulation to graduate students in different fields (Mathematics, Physics, Chemistry, Engineering, Geology, etc.). In this Master’s degree, “Parallel Programming” appears as a compulsory subject because it is a key topic for them. The concepts learned in this subject must be applied to real applications. Therefore, a complementary subject on “Applied Modeling and Simulation” has also been included. It is very important to show the students how to analyze their particular problems, think about them from a computational perspective and consider the related performance issues. So, in this paper, the methodology and the experience in introducing computational thinking, parallel programming and performance engineering in this interdisciplinary Master’s degree are shown. This overall approach has been refined through the Master’s life, leading to excellent academic results and improving the industry and students appraisal of this programme.}
}
@article{OCAK2023100146,
title = {An AI-enhanced pattern recognition approach to temporal and spatial analysis of children's embodied interactions},
journal = {Computers and Education: Artificial Intelligence},
volume = {5},
pages = {100146},
year = {2023},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2023.100146},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000255},
author = {Ceren Ocak and Theodore J. Kopcha and Raunak Dey},
keywords = {Computational thinking (CT), Multimodality, Embodied interactions, Artificial Intelligence (AI), Machine learning},
abstract = {Multimodal video analysis is a complex and time-consuming process for a researcher; it entails capturing, watching, and re-watching video data to identify which segments best inform or address the questions that drive the research. Modern AI applications can alleviate the challenges that arise during the fine-grained analysis of learners' multimodal interactions captured through video. In this study, we present a supervised approach to training a deep neural network to analyze children's computational thinking (CT) captured through multimodal video data. The approach first uses a set of images extracted from video data to train the AI to map them to labels generated using a priori theory. Confusion matrices were used to establish the performance of the AI by comparing AI predictions to human analysis on a validation set of data. The findings suggested that the AI classified several aspects of children's CT in a way that was highly consistent with human analysis, demonstrating how the AI could serve as an additional team member during multimodal analysis. Implications for using AI to ease the challenges of multimodal analysis of video data are discussed.}
}
@article{SHARMA201965,
title = {Coding games and robots to enhance computational thinking: How collaboration and engagement moderate children’s attitudes?},
journal = {International Journal of Child-Computer Interaction},
volume = {21},
pages = {65-76},
year = {2019},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2019.04.004},
url = {https://www.sciencedirect.com/science/article/pii/S2212868918301089},
author = {Kshitij Sharma and Sofia Papavlasopoulou and Michail Giannakos},
keywords = {Eye-tracking, Computational thinking, Coding activity, Programming, Informal learning, Attitudes, Children programming, Interaction design and children, Collaborative eye-tracking},
abstract = {Collaboration and engagement while coding are vital elements for children, yet very little is known about how children’s engagement and collaboration impact their attitudes toward coding activities. The goal of the study is to investigate how collaboration and engagement moderate children’s attitudes about coding activities. To do so, we designed an study with 44 children (between 8 and 17 years old) who participated in a full-day coding activity. We measured their engagement and collaboration during the activity by recording their gaze, and their attitudes in relation to their learning, enjoyment, team-work and intention by post-activity survey instruments. Our analysis shows that there is a significant moderating effect of collaboration and engagement on children’s attitudes. In other words, highly engaging and collaborative coding activities significantly moderate children’s attitudes. Our findings highlight the importance of designing highly collaborative and engaging coding activities for children and quantifies how those two elements moderate children’s attitudes.}
}
@incollection{PIERREROBERTSON2024,
title = {Literacies},
booktitle = {Reference Module in Social Sciences},
publisher = {Elsevier},
year = {2024},
isbn = {978-0-443-15785-1},
doi = {https://doi.org/10.1016/B978-0-323-95689-5.00116-4},
url = {https://www.sciencedirect.com/science/article/pii/B9780323956895001164},
author = {Petronetta Pierre-Robertson},
keywords = {Algorithmic literacy, Artificial intelligence, Computational thinking, Computer literacy, Critical literacy, Digital literacy, Information literacy, Internet literacy, Librarians and literacy, Libraries and literacy, Literacy, Media literacy, New literacies, Technology literacy, Transliteracy.},
abstract = {This entry provides the definition, etymology and history of literacy. It comments on the expansion of literacy in the technological age to embrace new literacies. It then defines ten literacies that can be incorporated under the concept of new literacies. These are information literacy and associated literacies like digital literacy, digital media literacy, internet literacy, technology literacy, computer literacy, computational thinking, critical literacy, algorithmic literacy, and transliteracy. It touches on the importance of new literacies in today’s continuously evolving digital world and gives trends for the future, with specific reference to Artificial Intelligence (AI). The relevance of libraries and librarians concerning each of the literacies is included.}
}
@article{CHEVALIER2022104431,
title = {The role of feedback and guidance as intervention methods to foster computational thinking in educational robotics learning activities for primary school},
journal = {Computers & Education},
volume = {180},
pages = {104431},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104431},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522000021},
author = {Morgane Chevalier and Christian Giang and Laila El-Hamamsy and Evgeniia Bonnet and Vaios Papaspyros and Jean-Philippe Pellet and Catherine Audrin and Margarida Romero and Bernard Baumberger and Francesco Mondada},
keywords = {Collaborative learning, Elementary education, Improving classroom teaching, Teaching/learning strategies, 21st-century abilities},
abstract = {Computational thinking (CT) is considered an emerging competence domain linked to 21st-century competences, and educational robotics (ER) is increasingly recognised as a tool to develop CT competences. This is why researchers recommend developing intervention methods adapted to classroom practice and providing explicit guidelines to teachers on integrating ER activities. The present study thus addresses this challenge. Guidance and feedback were considered as critical intervention methods to foster CT competences in ER settings. A between-subjects experiment was conducted with 66 students aged 8 to 9 in the context of a remote collaborative robot programming mission, with four experimental conditions. A two-step strategy was employed to report students' CT competence (their performance and learning process). Firstly, the students' CT learning gains were measured through a pre-post-test design. Secondly, video analysis was used to identify the creative computational problem-solving patterns involved in the experimental condition that had the most favourable impact on the students’ CT scores. Results show that delayed feedback is an effective intervention method for CT development in ER activities. Subject to delayed feedback, students are better at formulating the robot behaviour to be programmed, and, thus, such a strategy reinforces the anticipation process underlying the CT.}
}
@article{CIANCARINI2019110401,
title = {Cooperative Thinking: Analyzing a new framework for software engineering education},
journal = {Journal of Systems and Software},
volume = {157},
pages = {110401},
year = {2019},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2019.110401},
url = {https://www.sciencedirect.com/science/article/pii/S016412121930175X},
author = {Paolo Ciancarini and Marcello Missiroli and Daniel Russo},
keywords = {Partial Least Squares, Structural Equation Modelling, Multivariate Analysis, Latent Variable Analysis, Empirical Software Engineering, Computer Science Education, K-12, High School, Software Engineering Education, Computational Thinking, Agile, Cooperative Thinking},
abstract = {Computational Thinking (CT) and Agile Values (AV) focus respectively on the individual capability to think algorithmically, and on the principles of collaborative software development. Although these two dimensions of software engineering education complement each other, very few studies explored their interaction. In this paper we use an exploratory Structural Equation Modeling technique to introduce and analyze Cooperative Thinking (CooT), a model of team-based computational problem solving. We ground our model on the existing literature and validate it through Partial Least Square modeling. Cooperative Thinking is new competence which aim is to support cooperative problem solving of technical contents suitable to deal with complex software engineering problems. This article suggests to tackle the CooT construct as an education goal, to train students of software development to improve both their individual and teaming performances.}
}
@article{TANG2020103798,
title = {Assessing computational thinking: A systematic review of empirical studies},
journal = {Computers & Education},
volume = {148},
pages = {103798},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103798},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519303483},
author = {Xiaodan Tang and Yue Yin and Qiao Lin and Roxana Hadad and Xiaoming Zhai},
keywords = {Evaluation methodologies, Teaching/learning strategies, Information literacy, Applications in subject areas, 21st century abilities, Computational thinking},
abstract = {With the increasing attention to Computational Thinking (CT) in education, there has been a concomitant rise of needs and interest in investigating how to assess CT skills. This study systematically reviewed how CT has been assessed in the literature. We reviewed 96 journal articles to analyze specific CT assessments from four perspectives: educational context, assessment construct, assessment type, and reliability and validity evidence. Our review results indicate that (a) more CT assessments are needed for high school, college students, and teacher professional development programs, (b) most CT assessments focus on students' programming or computing skills, (c) traditional tests and performance assessments are often used to assess CT skills, and surveys are used to measure students’ CT dispositions, and (d) more reliability and validity evidence needs to be collected and reported in future studies. This review identifies current research gaps and future directions to conceptualize and assess CT skills, and the findings are expected to be beneficial for researchers, curriculum designers, and instructors.}
}
@article{ARNEDOMORENO2025100850,
title = {Programming Fun(damentals): Using commercial video games to teach basic coding to adult learners},
journal = {Entertainment Computing},
volume = {52},
pages = {100850},
year = {2025},
issn = {1875-9521},
doi = {https://doi.org/10.1016/j.entcom.2024.100850},
url = {https://www.sciencedirect.com/science/article/pii/S1875952124002180},
author = {Joan Arnedo-Moreno and David García-Solórzano},
keywords = {e-learning, Game based learning, Video games, Programming games, Computational thinking, Self-efficacy},
abstract = {The acquisition of computational thinking and coding skills is of special significance in helping adult learners keep pace with a new context where those skills are required for many parts of the workforce. However, there is an agreement in the scientific literature that important challenges exist, such as keeping student engagement and the requirement of developing problem-solving skills, and not just learning the code syntax. The inclusion of digital Game-Based Learning (GBL) has shown great potential. To better understand how it can be helpful to adult learners in STEM degrees, a study was conducted on the application of two very popular commercial video games in different introductory programming courses at an online university, during the introduction of basic programming topics (CS1). The methods combined a descriptive qualitative and a quantitative approach, using a reflective journals and questionnaires, which helped students consider and express their experiences, how they interacted with the games, how the games helped them better understand the topics, and realize their personal progress and potential. Results showed that the use of these games as educational resources had a positive impact in their engagement and sense of self-efficacy, but only if some important instructional considerations are taken into account.}
}
@article{DIAGO2022100388,
title = {Exploring the development of mental rotation and computational skills in elementary students through educational robotics},
journal = {International Journal of Child-Computer Interaction},
volume = {32},
pages = {100388},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100388},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000854},
author = {Pascual D. Diago and José A. González-Calero and Dionisio F. Yáñez},
keywords = {Educational robotics, Computational thinking, Mental rotation, Bee-bot, Elementary education, Tangible user interface},
abstract = {Interest in educational robotics has increased over the last decade. Through various approaches, robots are being used in the teaching and learning of different subjects at distinct education levels. The present study investigates the effects of an educational robotic intervention on the mental rotation and computational thinking assessment in a 3rd grade classroom. To this end, we carried out a quasi-experimental study involving 24 third-grade students. From an embodied approach, we have designed a two-hour intervention providing students with a physical environment to perform tangible programming on Bee-bot. The results revealed that this educational robotic proposal aimed at map-reading tasks leads to statistically significant gains in computational thinking. Moreover, students who followed the Bee-bot-based intervention achieved greater CT level compared to students following a traditional instruction approach, after controlling student’s prior level. No conclusive results were found in relation to mental rotation.}
}
@article{DELOLMOMUNOZ2020103832,
title = {Computational thinking through unplugged activities in early years of Primary Education},
journal = {Computers & Education},
volume = {150},
pages = {103832},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.103832},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520300348},
author = {Javier {del Olmo-Muñoz} and Ramón Cózar-Gutiérrez and José Antonio González-Calero},
keywords = {Computational thinking, Elementary education, Evaluation methodologies, Gender studies, Teaching/learning strategies},
abstract = {The inclusion of computational thinking (CT) in the classroom is something that the present and future society is demanding. However, this domain remains largely unexplored, especially in the first years of Primary Education. The purpose of this study is to evaluate whether the inclusion of the so-called unplugged activities favours the development of CT in the students of the early years of Primary Education. To this end, a quasi-experimental study has been carried out to explore the eventual benefit of a mixed approach that combines both unplugged and plugged-in activities. In particular, 84 second-grade students took part in the experiment. Three questions were evaluated: the development of their CT skills, their motivation towards the proposed instruction, and the influence of students' gender in the two previous areas. The intervention was designed on a selection of activities extracted from Code.org courses, and was divided into two phases, one in which one group worked with unplugged activities and the other with plugged-in activities, and a second where both groups worked with plugged-in activities. Analysing the three proposed questions through tests performed before, in between and after the instruction, it is concluded that the inclusion of unplugged activities in the instruction seems beneficial taking into account CT, motivation and gender.}
}
@article{ZHAO2019103633,
title = {Can playing a video game foster computational thinking skills?},
journal = {Computers & Education},
volume = {141},
pages = {103633},
year = {2019},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103633},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519301861},
author = {Weinan Zhao and Valerie J. Shute},
keywords = {Computational thinking, Video games, Abstraction, Block-based programming},
abstract = {In this study, we evaluated the cognitive and attitudinal influences of playing a video game, Penguin Go, designed to target the development of middle school students' computational thinking (CT) skills. In addition to the overall effectiveness of the game, we investigated the impact of a specific game feature—constraints on the number of blocks in a solution. Results showed that after playing Penguin Go for less than two hours, students' CT skills improved significantly, but the additional constraints did not generate a significant impact on learning. In addition, the game overall did not influence students' attitudes toward computer science, but the constraints condition of the game negatively influenced students' attitudes toward computer science. Implications of the findings and possible directions for future research regarding using these types of games to foster computational thinking skills are discussed.}
}
@article{LUO2020103759,
title = {Exploring the evolution of two girls’ conceptions and practices in computational thinking in science},
journal = {Computers & Education},
volume = {146},
pages = {103759},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103759},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519303124},
author = {Feiya Luo and Pavlo D. Antonenko and E. Christine Davis},
keywords = {Computational thinking integration, Elementary education, Science education, Robotics, Girls in STEM},
abstract = {As the definition of computational thinking (CT) in education continues to evolve, researchers have investigated the integration of CT in K-12 learning contexts and students' perceptions and development of CT in these integrated learning experiences. Drawing on prior work, this study explored the evolution of two elementary school girls’ conceptions and practices of CT in science as they participated in a four-week CT-integrated science unit at a summer camp using the Dash robot and the Blockly app. Three CT concepts: loops, sequences, and conditionals, were integrated into a unit on the reproduction cycle of flowerless plants. Observations, participant drawings, and analysis of Blockly code revealed that the children improved in their CT practices. In addition, the CT-integrated science unit developed for this study successfully engaged both participants, even when one expressed a low interest in science. The study suggested that defining computing vocabulary, using checkpoint activities with immediate and corrective feedback, and scaffolding of coding concepts with unplugged activities were particularly necessary in promoting CT and the integration of CT and science education in an elementary-level informal learning context.}
}
@article{ZHANG2019103607,
title = {A systematic review of learning computational thinking through Scratch in K-9},
journal = {Computers & Education},
volume = {141},
pages = {103607},
year = {2019},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103607},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519301605},
author = {LeChen Zhang and Jalal Nouri},
keywords = {Computational thinking, Programming, Scratch, K-9, Systematic review},
abstract = {As computational thinking (CT) is being embraced by educational systems worldwide, researchers and teachers have posed important questions such as “what to teach” and “what can be learned.” These questions are universally crucial to the learning of all subjects. Nevertheless, there is no up-to-date, systematic overview of CT education for K-9 students that attempt to provide answers to these crucial questions. Thus, this systematic review presents a synthesis of 55 empirical studies, providing evidence of the development of computational thinking through programming in Scratch, one of the most popular visual block programming languages in schools. The purpose of this review is to systematically examine the CT skills that can be obtained through Scratch in K-9 based on empirical evidence. This systematic review has adopted Brennan and Resnick's (2012) framework as the basis for defining and identifying the expected CT skills in K-9. The major findings entail what computational thinking skills students in K-9 can learn through Scratch in relation to the framework mentioned above, taking the progression of learning into account. Additional CT skills that are not captured by the framework were identified including input/output, reading, interpreting and communicating code, using multimodal media, predictive thinking, and human-computer interaction. These additional CT skills are not currently presented in Brennan and Resnick's (2012) framework and can be considered as possible supplements to their framework. Furthermore, the paper discusses the difficulties regarding assessment and the progression of the identified skills, as well as problems with study designs. Finally, the paper sets out suggestions for future studies based on the current research gaps.}
}
@article{ANGELI2020105954,
title = {Developing young children's computational thinking with educational robotics: An interaction effect between gender and scaffolding strategy},
journal = {Computers in Human Behavior},
volume = {105},
pages = {105954},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.03.018},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219301104},
author = {Charoula Angeli and Nicos Valanides},
keywords = {Computational thinking, Spatial relations, Scaffolding, Pre-primary school children, Educational robotics, Bee-Bot},
abstract = {The study examined the effects of learning with the Bee-Bot on young boys' and girls' computational thinking within the context of two scaffolding techniques. The study reports statistically significant learning gains between the initial and final assessment of children's computational thinking skills. Also, according to the findings, while both boys and girls benefited from the scaffolding techniques, a statistically significant interaction effect was detected between gender and scaffolding strategy showing that boys benefited more from the individualistic, kinesthetic, spatially-oriented, and manipulative-based activity with the cards, while girls benefited more from the collaborative writing activity. In regards to the children's problem-solving strategies during debugging, the results showed that the majority of them used decomposition as a strategy to deal with the complexity of the task. These results are important, because they show that children at this very young age are able to cope with the complexity of a learning task by decomposing it into a number of subtasks that are easier for them to tackle. The research contributes to the body of knowledge about the teaching of computational thinking. In addition, the study has practical significance for curriculum developers, instructional leaders, and classroom teachers, as they can use the results of this study to design curricula and classroom activities with a focus on the broader set of computational thinking skills, and not only coding.}
}
@article{BERS2019130,
title = {Coding as a playground: Promoting positive learning experiences in childhood classrooms},
journal = {Computers & Education},
volume = {138},
pages = {130-145},
year = {2019},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.04.013},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519300995},
author = {Marina U. Bers and Carina González-González and Mª Belén Armas–Torres},
keywords = {Cooperative/collaborative learning, Teaching/learning strategies, Improving classroom teaching, Elementary education},
abstract = {In recent years, there has been a push to introduce coding and computational thinking in early childhood education, and robotics is an excellent tool to achieve this. However, the integration of these fundamental skills into formal and official curriculums is still a challenge and educators needs pedagogical perspectives to properly integrate robotics, coding and computational thinking concepts into their classrooms. Thus, this study evaluates a “coding as a playground” experience in keeping with the Positive Technological Development (PTD) framework with the KIBO robotics kit, specially designed for young children. The research was conducted with preschool children aged 3–5 years old (N = 172) from three Spanish early childhood centers with different socio-economic characteristics and teachers of 16 classes. Results confirm that it is possible to start teaching this new literacy very early (at 3 years old). Furthermore, the results show that the strategies used promoted communication, collaboration and creativity in the classroom settings. The teachers also exhibited autonomy and confidence to integrate coding and computational thinking into their formal curricular activities, connecting concepts with art, music and social studies. Through the evidence found in this study, this research contributes with examples of effective strategies to introduce robotics, coding and computational thinking into early childhood classrooms.}
}
@article{KASPERSEN2022100539,
title = {High school students exploring machine learning and its societal implications: Opportunities and challenges},
journal = {International Journal of Child-Computer Interaction},
volume = {34},
pages = {100539},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100539},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000575},
author = {Magnus Høholt Kaspersen and Karl-Emil Kjær Bilstrup and Maarten {Van Mechelen} and Arthur Hjort and Niels Olof Bouvin and Marianne Graves Petersen},
keywords = {Computational empowerment, Computational thinking, Machine learning, Learning tools, AI literacy},
abstract = {The increased use of AI and machine learning (ML) calls for a general AI literacy, in particular regarding understanding how ML works, the process behind creating ML models, and reflecting on its implications. Where existing learning tools focus on the first two, we explore opportunities and challenges for meaningfully engaging students in understanding and reflecting on ML in their everyday life. We designed VotestratesML, following a Constructive Design Research approach, as an ethics-first learning tool that allow students to explore implications of ML for democratic elections. Based on deployments of VotestratesML in two high school social studies classrooms, we found that safely exploring ML from a concrete starting point helped students reflect and form opinions about its use, that promoting iterative exploration through collaboration and competition motivated them to explore, and that foregrounding ethics in the design and grounding ML in a well-known subject area allowed them to engage with ML on a personal level.}
}
@article{BERS2023394,
title = {Coding as another language: Research-based curriculum for early childhood computer science},
journal = {Early Childhood Research Quarterly},
volume = {64},
pages = {394-404},
year = {2023},
issn = {0885-2006},
doi = {https://doi.org/10.1016/j.ecresq.2023.05.002},
url = {https://www.sciencedirect.com/science/article/pii/S0885200623000571},
author = {Marina Umaschi Bers and Jessica Blake-West and Madhu Govind Kapoor and Tess Levinson and Emily Relkin and Apittha Unahalekhaka and Zhanxia Yang},
keywords = {Design-based research, Coding, Computational Thinking, Powerful Ideas, ScratchJr},
abstract = {This paper describes the iterative research and evaluation of the Coding as Another Language (CAL) curriculum that utilizes the free ScratchJr programming language in kindergarten to second grade. CAL was designed using principles of three theoretical frameworks: Curriculum Research Framework (CRF), which proposes different phases in the creation of research-based curriculum; Constructionism, which presents a computationally-rich project-based methodology based on identifying powerful ideas from a learning domain; and Positive Technological Development, which intentionally integrates socio-emotional and ethical dimensions into curricular experiences. The pedagogical foundation of CAL involves the understanding of coding as a literacy, that is, putting developmentally-appropriate powerful ideas of computer science in conversation with those taught in language arts. The paper first describes CAL and then presents results from both a pilot study and a cluster randomized controlled trial that set to evaluate CAL's feasibility and impact on students’ learning outcomes. Our findings showed that the CAL curriculum was not only feasible to implement, but also effective for improving coding skills. However, CAL's impact on computational thinking is less clear given that in the cluster randomized controlled trial, both the control and the intervention groups improved equally on a measure of computational thinking.}
}
@article{ISRAEL2015263,
title = {Supporting all learners in school-wide computational thinking: A cross-case qualitative analysis},
journal = {Computers & Education},
volume = {82},
pages = {263-279},
year = {2015},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2014.11.022},
url = {https://www.sciencedirect.com/science/article/pii/S0360131514002759},
author = {Maya Israel and Jamie N. Pearson and Tanya Tapia and Quentin M. Wherfel and George Reese},
keywords = {Computational thinking, Computing, Struggling learners, Diverse learners, Content integration},
abstract = {The purpose of this study was to investigate how elementary school teachers with limited computer science experience in a high-need school integrated computational thinking into their instruction. The researchers conducted a cross-case analysis across different instructional contexts (e.g., general education classrooms, library, art) that included multiple observations and interviews over four months. Major themes included: (a) a wide range of implementation models emerged depending on teaching contexts, (b) ongoing professional development and embedded coaching resulted in increasing participation in computing education, (c) teachers and administrators viewed barriers to implementing computing from a problem solving framework, and (d) struggling learners, including students with disabilities and those living in poverty, benefitted from computing education that included scaffolding, modeling, and peer collaboration.}
}
@article{MONTEIRO201791,
title = {Signifying software engineering to computational thinking learners with AgentSheets and PoliFacets},
journal = {Journal of Visual Languages & Computing},
volume = {40},
pages = {91-112},
year = {2017},
note = {Semiotics, Human-Computer Interaction and End-User Development},
issn = {1045-926X},
doi = {https://doi.org/10.1016/j.jvlc.2017.01.005},
url = {https://www.sciencedirect.com/science/article/pii/S1045926X16300234},
author = {Ingrid Teixeira Monteiro and Luciana Cardoso de Castro Salgado and Marcelle Pereira Mota and Andréia Libório Sampaio and Clarisse Sieckenius {de Souza}},
keywords = {Computational thinking acquisition (CTA), AgentSheets, Program deconstructions, End User Software Engineering (EUSE), Semiotic analysis, Semiotic Engineering, End user development (EUD)},
abstract = {Nonprofessional end user programs have increased remarkably in volume and diversity. However, for such programs to be usable and reliable, their creators should be familiar with software engineering practices that are typically not part of their range of competence and source of enjoyment. While the expansion of computational thinking acquisition (CTA) initiatives at schools and the availability of improved programming environments have contributed to facilitate the learners’ coding tasks, much less has been done to facilitate the acquisition of software quality notions. This paper reports on a Brazilian CTA program guided by semiotic principles and describes a study of how the technology used in it prefigures elements of software engineering in the participants’ programs created with AgentSheets. Our research contributions touch on the semiotic potential of CTA infrastructures and on associated pedagogical considerations for expanding CTA programs with software engineering basics. We also propose items for an interdisciplinary research agenda.}
}
@article{LOVE2022100543,
title = {A screen-based or physical computing unit? Examining secondary students’ attitudes toward coding},
journal = {International Journal of Child-Computer Interaction},
volume = {34},
pages = {100543},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100543},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000617},
author = {Tyler S. Love and Reuben S. Asempapa},
keywords = {Computational thinking, Physical computing, Integrated STEM education, Design and technology, Technology and engineering education, Tangible interaction},
abstract = {In recent years there has been a growing emphasis placed on access to computational thinking (CT) instruction for every K-12 student in the United States (U.S.). Concurrently, calls for integrating CT concepts within authentic science, technology, engineering, and mathematics (STEM) contexts have also increased. This is reflected by the inclusion of CT in the Next Generation Science Standards and the Standards for Technological and Engineering Literacy. However, methods for teaching CT concepts within secondary level STEM courses vary drastically. Physical computing, the design and programming of physical systems or devices using computational thinking skills, has become increasingly popular in the U.S. in attempts to integrate CT within authentic STEM problem-solving contexts. Despite this rise in popularity, there remains a limited but growing body of research investigating physical computing pedagogy and student learning. A mixed methods design was used in this study to examine 170 middle school students’ attitudes toward coding and after participating in either a screen-based or physical computing unit. The results indicated that students who completed the screen-based unit reported statistically greater attitudes toward the classroom applications and career/future use of computing concepts. Students in the treatment group believed that physical computing made learning computing concepts more difficult, but they preferred the hands-on learning opportunities provided by physical computing. Furthermore, male students reported higher attitudinal ratings than females regarding the influence computing would have on their future academic and career choices. This study provides implications for improving physical computing instruction and integration within STEM education contexts.}
}
@article{SOLEIMANI20199,
title = {CyberPLAYce—A tangible, interactive learning tool fostering children’s computational thinking through storytelling},
journal = {International Journal of Child-Computer Interaction},
volume = {20},
pages = {9-23},
year = {2019},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2019.01.002},
url = {https://www.sciencedirect.com/science/article/pii/S2212868917300971},
author = {Arash Soleimani and Danielle Herro and Keith Evan Green},
keywords = {Tangible storytelling, Computational thinking, Play, Childhood education, Prototyping},
abstract = {The learning environment plays a critical role in a child’s life, affecting both cognitive development and effectiveness in work or play. As the boundary between physical and digital worlds blurs, there is a need for new digital tools and physical environments to support the everyday, cyber–physicalinteractions of children. This paper presents a Research-through-Design example of CyberPLAYce, a tangible, interactive, learning construction kit for children supporting storytelling and computational thinking (CT). The construction kit facilitates and enhances child-to-child, child-to-machine, and child-to-environment interactions through semi-structured play. It offers young students the opportunity to materialize their ideas through the construction of cyber–physical story algorithms allowing them to physically alter story segments while constructing and enhancing the storyline. The CyberPLAYce research places an emphasis on the importance of employing tangible learning tools in order to enhance children’s active engagement. We focus on the motivations for CyberPLAYce, its participatory design, and results of an empirical study concerning CT with 8-12 year-old storytellers in a classroom setting. Results from the study suggest that cyber–physical activities afforded by CyberPLAYce cultivate engaged storytelling and CT practices in children. This multidisciplinary design-research contributes to construction tools for children, cyber–physical storytelling and story-construction activities, and tangible computing and programming activities that support CT.}
}
@article{TERROBA2021143,
title = {Education intervention using a ground robot with programmed directional controls: observational analysis of the development of computational thinking in early childhood education},
journal = {Revista de Psicodidáctica (English ed.)},
volume = {26},
number = {2},
pages = {143-151},
year = {2021},
issn = {2530-3805},
doi = {https://doi.org/10.1016/j.psicoe.2021.03.002},
url = {https://www.sciencedirect.com/science/article/pii/S2530380521000113},
author = {Marta Terroba and Juan Miguel Ribera and Daniel Lapresa and M. Teresa Anguera},
keywords = {computation, robotics, pre-primary school, observational methodology, T-patterns, computación, robótica, Educación Infantil, metodología observacional, T-patterns},
abstract = {The present work presents an intervention proposal for the development of computational thinking in early childhood education, through the use of a ground robot with programmed directional controls. Within the use of observational methodology, an observation system has been designed that allows the analysis and interpretation of the behavior displayed in the performance of the intervention proposal. The reliability of the observation system has been guaranteed in the form of inter-observer agreement, calculated using Cohen’s (1960) Kappa coefficient. Within the theory of generalizability, the measurement plan [Categories] [Steps]/[Participants], has allowed to verify a high precision reliability of the generalization of the results. The operability of the observation system has been reflected in the regular behavior structures (T-patterns) detected -through the Theme software-, which have allowed characterizing difficulties in the assimilation of an incipient computational language related to the ability of spatial orientation and the sequencing capacity of children -situations involving turning and number of commands used in the sequence-.
Resumen
El presente artículo presenta una propuesta de intervención para el desarrollo del pensamiento computacional en Educación Infantil, mediante un robot de suelo con mandos de direccionalidad programada. En el seno de la metodología observacional, se ha diseñado un sistema de observación que permite el análisis e interpretación de la conducta desplegada en el desempeño de la propuesta de intervención. La fiabilidad del sistema de observación se ha garantizado en forma de concordancia interobservadores, calculada a través del coeficiente Kappa de Cohen (1960). En el seno de la teoría de la generalizabilidad, el plan de medida [Categorías] [Steps]/ [Participantes], han permitido constatar una elevada fiabilidad de precisión de generalización de los resultados. La operatividad del sistema de observación ha quedado reflejada en las estructuras regulares de conducta (T-patterns) detectadas -mediante el software Theme-, que han permitido caracterizar dificultades en la asimilación de un lenguaje computacional incipiente relacionadas con la capacidad de orientación espacial y la capacidad de secuenciación del niño -situaciones que implican giro y número de comandos empleados en la secuencia-.}
}
@article{KAZIMOGLU2012522,
title = {Learning Programming at the Computational Thinking Level via Digital Game-Play},
journal = {Procedia Computer Science},
volume = {9},
pages = {522-531},
year = {2012},
note = {Proceedings of the International Conference on Computational Science, ICCS 2012},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2012.04.056},
url = {https://www.sciencedirect.com/science/article/pii/S1877050912001779},
author = {Cagin Kazimoglu and Mary Kiernan and Liz Bacon and Lachlan MacKinnon},
keywords = {computational thinking, game based learning, serious games, introductory programming, games and learning},
abstract = {This paper outlines an innovative game model for learning computational thinking (CT) skills through digital game-play. We have designed a game framework where students can practice and develop their skills in CT with little or no programming knowledge. We analyze how this game supports various CT concepts and how these concepts can be mapped to programming constructs to facilitate learning introductory computer programming. Moreover, we discuss the potential benefits of our approach as a support tool to foster student motivation and abilities in problem solving. As initial evaluation, we provide some analysis of feedback from a survey response group of 25 students who have played our game as a voluntary exercise. Structured empirical evaluation will follow, and the plan for that is briefly described.}
}
@article{GUGGEMOS2021104060,
title = {On the predictors of computational thinking and its growth at the high-school level},
journal = {Computers & Education},
volume = {161},
pages = {104060},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.104060},
url = {https://www.sciencedirect.com/science/article/pii/S036013152030258X},
author = {Josef Guggemos},
keywords = {Computational thinking level and growth, Gender and home environment, Reasoning skills, Motivation, Longitudinal study},
abstract = {Computational thinking (CT) is a key 21st-century skill. This paper contributes to CT research by investigating CT predictors among upper secondary students in a longitudinal and natural classroom setting. The hypothesized predictors are grouped into three areas: student characteristics, home environment, and learning opportunities. CT is measured with the Computational Thinking Test (CTt), an established performance test. N = 202 high-school students, at three time points over one school year, act as the sample and latent growth curve modeling as the analysis method. CT self-concept, followed by reasoning skills and gender, show the strongest association with the level of CT. Computer literacy, followed by duration of computer use and formal learning opportunities during the school year, have the strongest association with CT growth. Variables from all three areas seem to be important for predicting either CT level or growth. An explained variance of 70.4% for CT level and 61.2% for CT growth might indicate a good trade-off between the comprehensiveness and parsimony of the conceptual framework. The findings contribute to a better understanding of CT as a construct and have implications for CT instruction, e.g., the role of computer science and motivation in CT learning.}
}
@article{XU2024100415,
title = {Measuring mutual engagement in the context of middle-school pair programming: Development and validation of a self-reported questionnaire},
journal = {Computers in Human Behavior Reports},
volume = {14},
pages = {100415},
year = {2024},
issn = {2451-9588},
doi = {https://doi.org/10.1016/j.chbr.2024.100415},
url = {https://www.sciencedirect.com/science/article/pii/S2451958824000484},
author = {Fan Xu and Ana-Paula Correia},
keywords = {Mutual engagement, Engagement questionnaire, Dyadic collaborative learning, Pair programming, Computational thinking, Middle school},
abstract = {With the increasing importance of equipping young learners with computational thinking skills through learning to code, pair programming has emerged as a prevalent collaborative learning strategy in this context. Successful pair programming interventions necessitate mutual engagement between partners within a dyad. However, the measurement of mutual engagement in dyadic collaborative learning remains an under-researched area. This research represents a foundational stage in bridging this gap by developing a comprehensive 20-item Pair-Programming Mutual Engagement Questionnaire (PPME-Q) as a measure of mutual engagement in pair programming at the activity level. The questionnaire was validated through a sample of 86 eighth-grade students. Confirmatory factor analysis confirmed the existence of a four-factor structure comprising of the behavioral, cognitive, emotional, and social engagement factors. The findings demonstrate the validity (χ2/df = 1.32) and reliability (Cronbach's α = 0.888) of the PPME-Q, establishing it as an effective tool for assessing eighth graders' mutual engagement in pair programming activities. As this tool is in the nascent stages of development the measurement, we emphasize the need for further empirical studies to establish criterion validity. We also discuss the implications of these findings for future research and educational practices. This targeted instrument can then potentially be adapted or scaled to other age groups based on the insights gained.}
}
@article{WOLFENGAGEN2024101175,
title = {Computationally inspired cognitive modeling},
journal = {Cognitive Systems Research},
volume = {83},
pages = {101175},
year = {2024},
issn = {1389-0417},
doi = {https://doi.org/10.1016/j.cogsys.2023.101175},
url = {https://www.sciencedirect.com/science/article/pii/S1389041723001092},
author = {Viacheslav Wolfengagen and Larisa Ismailova and Sergey Kosikov},
keywords = {AGI, Cognitive modeling, Information process, Channeling, Computational thinking, Semantic information processing, Computational model, Variable domains},
abstract = {A computational approach to cognitive modeling is proposed. The computational model is a parametric construction that takes into account cognitive stages and transitions between them. The cognitive model enables the idea of information processes, from their birth and appearance in a scope, evolution and canceling out their existence and disappearing from the scope. Process habitats are Lawvere’s variable domains; inter-transition is based on the notion of channeled spreading of processes.}
}
@article{VARELA2019e02820,
title = {Skills in computational thinking of engineering students of the first school year},
journal = {Heliyon},
volume = {5},
number = {11},
pages = {e02820},
year = {2019},
issn = {2405-8440},
doi = {https://doi.org/10.1016/j.heliyon.2019.e02820},
url = {https://www.sciencedirect.com/science/article/pii/S2405844019364801},
author = {Concepción Varela and Carolina Rebollar and Olatz García and Eugenio Bravo and Javier Bilbao},
keywords = {Education, Educational development, Evaluation in education, Pedagogy, Teaching research},
abstract = {In this world of the digital era, in which we are living, one of the fundamental competences that students must acquire is the competence in Computational Thinking (CT). Although there is no general consensus on a formal definition, there is a general understanding of it as a set of skills and attitudes necessary for the resolution, with or without a computer, of problems that may arise in any area of life. Measuring and evaluating which of the CT skills students have acquired is fundamental, and for this purpose, previously validated measuring instruments must be used. In this study, a previously validated instrument is applied to know if the new students in the Engineering Degrees of the University of the Basque Country have the following skills in CT: Critical Thinking, Algorithmic Thinking, Problem Solving, Cooperativity and Creativity.}
}